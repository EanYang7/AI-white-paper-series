<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>9.9 抽象</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part173.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part175.htm">下一个 &gt;</a></p><p class="s8" style="padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="bookmark187">9.9 </a><span class="s9">抽象</span></p><p style="padding-top: 6pt;padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">抽象是人认识世界的基本策略，是一个动作或操作。然而抽象作为一个基本策略的数学实质是什么？</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">抽象一定是作用在一个具体的已知对象上的，提取该对象的一个数学属性。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 28pt;line-height: 113%;text-align: left;"><span class="h4">定义 </span><span class="s14">9.15</span><span class="h4">（抽象）</span>给定一个对象 <span class="s11">𝑥</span>，该对象的一个<span class="h4">抽象</span>就是一个策略，作用于 <span class="s11">𝑥</span>，提取对象 <span class="s11">𝑥 </span>的一个数学属性 <span class="s11">𝑓</span>，使得有很多对象</p><p class="s11" style="padding-top: 4pt;padding-left: 14pt;text-indent: 0pt;text-align: left;">𝑦<span class="s17">1</span>, 𝑦<span class="s17">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span><span class="s41"> </span><span class="p">等都具有属性 </span>𝑓<span class="p">。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">在这个定义中：</p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">1</span>）对象 <span class="s11">𝑥 </span>是具体的；</p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">2</span>）<span class="s11">𝑓 </span>是 <span class="s11">𝑥 </span>的一个数学属性，因此 <span class="s11">𝑓 </span>是一个创造的新对象；</p><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 133%;text-align: left;"><span class="p">（</span><span class="s10">3</span><span class="p">）抽象的实质在于 </span>𝑓  <span class="p">同时还是许多其它对象 </span>𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛    </span><span class="p">的数学属性。</span></p><p class="s11" style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 132%;text-align: left;"><span class="p">在提取数学属性 </span>𝑓  <span class="p">时，</span>𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛    </span><span class="p">可能已经观察到，也可能尚未观察到。</span></p><p class="s11" style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;"><span class="p">如果 </span>𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span><span class="s41"> </span><span class="p">已经观察到，这时 </span>𝑥 <span class="p">的抽象就是找 </span>𝑥 <span class="p">和</span></p><p class="s11" style="padding-top: 5pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span><span class="s41"> </span><span class="p">的共性。</span></p><p class="s11" style="padding-top: 5pt;padding-left: 7pt;text-indent: 27pt;line-height: 133%;text-align: justify;"><span class="p">（</span><span class="s10">4</span><span class="p">）衡量从 </span>𝑥 <span class="p">抽象出 </span>𝑓 <span class="p">的质量的标准是：</span>{𝑥, 𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span>} <span class="p">这些对象构成的系统是否包含大量信息。</span></p><p class="s11" style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 132%;text-align: justify;"><span class="p">因此，在从 </span>𝑥 <span class="p">抽象出 </span>𝑓 <span class="p">时，如果 </span>𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span><span class="s41"> </span><span class="p">没有被观察到，那么从 </span>𝑥 <span class="p">抽象出 </span>𝑓 <span class="p">的意义还无法体现。</span></p><p class="s11" style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 136%;text-align: justify;"><span class="p">（</span><span class="s10">5</span><span class="p">）一个好的抽象是从 </span>𝑥 <span class="p">抽象出 </span>𝑓<span class="p">，后来又观察到还有大量对象</span>𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span><span class="s41"> </span><span class="p">都同时具有属性 </span>𝑓<span class="p">，而且 </span>{𝑥, 𝑦<span class="s15">1</span>, 𝑦<span class="s15">2</span>, ⋯ , 𝑦<span class="s15">𝑛</span>} <span class="p">这些对象形成一个复杂的系统，在其中嵌入了大量的信息。</span></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: justify;">（<span class="s10">6</span>）抽象这个概念已经隐含着创造这一策略。因为当观察到 <span class="s11">𝑥</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;">时，<span class="s11">𝑓 </span>可能还是一个不存在的对象，因而 <span class="s11">𝑓 </span>是创造的结果。</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">抽象实际上是人先天所具有的能力，即先验能力。当一个小孩第一次看到猫的时候，他<span class="s10">/</span>她一定是在脑子里抽象了一个对象，这个对象</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">不是实物的猫，但它非常准确地表示了猫。正因如此，以后每当再次看到猫时，小孩马上说，我见过，我知道，这是猫。能做到这一点的唯一原因就是当小孩第一次看到猫的时候，他<span class="s10">/</span>她已经抽象出一个对象，且非常准确，而且表示了实物的猫。因此，抽象是人与生俱来所具有的能力。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part173.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part175.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
