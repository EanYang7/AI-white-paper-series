<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>4.1.1 路径规划问题</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part69.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part71.htm">下一个 &gt;</a></p><p class="s14" style="padding-left: 7pt;text-indent: 0pt;line-height: 22pt;text-align: left;"><a name="bookmark71">4.1.1 </a><span class="h4">路径规划问题</span></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">路径规划问题（<span class="s10">Routing Problem</span>）是一类受到广泛关注的组合优化问题，旨在满足一定约束的情况下，寻找从源节点到目标节点的最优路径。旅行商问题（<span class="s10">Traveling Salesman Problem</span>，<span class="s10">TSP</span>）、汽车路由问题（<span class="s10">Vehicle Routing Problems</span>，<span class="s10">VRP</span>）均为典型的路径规划问题。求解路径规划问题的传统启发式算法往往基于局部搜索技术，求解一个实例往往需要较长的时间，无法满足实际应用场景中的效率要求。基于图学习方法求解路径规划问题，挑战在于图学习方法需要设计和训练模型来处理大量可能的路径组合。另外，路径的顺序影响着求解的质量。因此，在图学习过程中，需要在处理图结构时采用特殊的策略模拟路径的先后顺序选择。路径规划问题需要在全局层面找到问题的解，而不仅仅是在局部找到较好的解决方案。如何寻找问题的全局结构是一个挑战，因为大多数图神经网络都基于邻域信息聚合，可能无法有效的捕捉全局结构信息。</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">路径规划问题的直接求解思路是利用端到端学习方法进行训练</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="p">求解。为了克服端到端学习方法中的路径规划节点顺序问题，</span>Kool <a href="part328.htm#bookmark460" class="a">等人</a><a href="part328.htm#bookmark460" class="s33">[2</a><span class="s20">]</span>   <span class="p">提出了一种基于图注意力机制的模型，来学习 </span>TSP <span class="p">问题节点序列之间的公共模式，并基于训练得到的特征构造路径解。</span>Chen <a href="part328.htm#bookmark461" class="a">等人</a><a href="part328.htm#bookmark461" class="s33">[3</a><span class="s20">]</span><span class="p">提出了一种称为 </span>NeuRewriter <span class="p">的方法，通过深度图神经网络学习重写当前路径解的局部模块，改进路径选择过程。</span>NeuRewriter  <span class="p">可以分解为 </span>region-picking  <span class="p">和 </span>rule-picking <span class="p">两个模块，每个模块由 </span>actor-critic <span class="p">方法分别进行训练，分别负责路径规划中的路径顺序选择和路径重新规划决策。</span>Lu <a href="part328.htm#bookmark462" class="a">等人</a><a href="part328.htm#bookmark462" class="s33">[4</a><span class="s20">]</span>   <span class="p">提出一种新的学习方法（</span>L2I<span class="p">）。基于一个随机初始解，</span>L2I  <span class="p">从一系列由图编码特征预训练得到的运算符中进行选择，通过选定的最优运算符改进路径顺序。尽管上述路径规划训练方法考虑了节点选择的先后顺序特征，但训练过程缺乏有效的搜索策略，这也导致这些方法在路径规划问题上的求解质量难以保证。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">为了进一步提高路径规划问题的求解质量，</span>Fu <a href="part328.htm#bookmark463" class="a">等人</a><a href="part328.htm#bookmark463" class="s33">[5</a><span class="s20">]</span>   <span class="p">考虑首先在子图中训练一个小规模神经网络模型，然后利用图采样、图转换和图合并等技术构建完整图的热力图。基于合成得到的热力图，通过蒙特卡洛树搜索获得高质量路径解。</span>Jin <a href="part328.htm#bookmark464" class="a">等人</a><a href="part328.htm#bookmark464" class="s33">[6</a><span class="s20">]</span>   <span class="p">提出了一种基于多指针 </span>Transformer <span class="p">的端到端图深度学习方法（</span>Pointerformer<span class="p">）。通过可逆残差网络和多指针网络，</span>Pointerformer  <span class="p">有效的控制了编码器</span>-<span class="p">解码器架构的内存消耗。同时，</span>Pointerformer <span class="p">通过引入特征增强和上下文增强方法，可以获取更优的搜索决策，从而提升了路径解的质量。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">虽然图神经网络算法的计算速度优势明显，但其求解路径规划问题的质量相对于传统启发式搜索方法仍有很大的提升空间。为了结合二者的优势，人们提出利用图神经网络指导传统启发式搜索共同改进路径规划解的质量。</span>Hottung <a href="part328.htm#bookmark465" class="a">等人</a><span class="s20">[7]</span> <span class="p">基于注意力深度图神经网络，提出了一种新的邻域搜索框架求解车辆路径规划问题，并通过更广泛邻域信息的学习来指导搜索算法的求解过程。</span>Delarue <a href="part328.htm#bookmark466" class="a">等人</a><span class="s20">[8]</span> <span class="p">设计了基于值函数的深度图卷积网络框架，将搜索过程的动作选择问题建模为</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;">混合整数优化问题，并通过启发式搜索算法进行改进。<span class="s10">Hottung </span>等人</p><p class="s20" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">[9]<span class="s10"> </span><span class="p">使用了条件变分自编码器，学习如何将潜在搜索空间中的点映射到特定实例的图编码特征中，并通过无约束连续优化方法对所学习的图特征进行导向性搜索。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">利用图神经网络指导传统启发式搜索的图学习方法在求解速度和求解质量上相较于传统启发式方法有了很大的提升。然而，由于大规模图神经网络具有较高的计算复杂性，大规模路径规划问题实例的搜索空间庞大，这些方法只能够依赖于小规模图神经网对生成实例小样本进行训练。为了提高问题求解泛化能力，人们尝试用 </span>Transformer<span class="p">、多阶段学习等方法进行改进。</span>Li <a href="part328.htm#bookmark468" class="a">等人</a><span class="s20">[10]</span> <span class="p">提出了在图神经网络中引入一种基于 </span>Transformer <span class="p">模型的局部搜索框架，利用空间局部性原理从原始指数级解空间中选择线性数量的子问题，最终调用启发式求解器来迭代优化路径解，提高了求解大规模路径规划实例的能力。</span>Choo <a href="part328.htm#bookmark469" class="a">等人</a><span class="s20">[11]</span> <span class="p">提出在图神经网络中引入模拟引导的束搜索算法，在固定宽度的树搜索中识别候选解，减小了问题的搜索空间，提高了问题求解的泛化能力。</span>Hou <a href="part328.htm#bookmark470" class="a">等人</a><span class="s20">[12]</span> <span class="p">提出两阶段划分方法，对 </span>VRP <span class="p">问题子路径序列进行编码。在求解过程中首先根据子路径编码将大实例划分为小实例，通过调用传统启发式算法进行求解，提升了问题的求解效率和求解能力。</span></p><p class="s10" style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">尽管基于端到端的学习方法可以有效求解路径规划问题，但它需要大量的训练数据生成和计算资源来对模型进行预训练。路径规划问题的另一种求解方法是利用决策配置学习方法进行求解。在决策配置学习方法中，训练模型将学习图实例的抽象特征并直接学习算法决策的重要性，进而获得较好的求解决策。</span>Xin <a href="part328.htm#bookmark471" class="a">等人</a><span class="s20">[13]</span> <span class="p">设计了一种多解码器注意力模型（</span>MDAM<span class="p">）对路径序列特征进行学习，获得了问题求解的自主决策。</span>Joshi <a href="part328.htm#bookmark472" class="a">等人</a><span class="s20">[14]</span> <span class="p">使用图卷积网络学习节点与边特征的重要性，随后使用高度并行化的集束搜索（</span>Beam search<span class="p">）算法生成路径</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;"><span class="p">解，并在配置学习过程中不断改进启发式算法的决策搜索效率。</span>Kool<a href="part328.htm#bookmark473" class="a">等人</a><span class="s20">[15]</span> <span class="p">将机器学习算法与动态规划算法的优势相结合，提出了 </span>DPDP <span class="p">方法。具体来说，</span>DPDP <span class="p">训练一个深度神经网络对实例中的边进行打分，并基于网络打分结果减少动态规划算法决策状态空间，以提高求解速度与求解质量。</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part69.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part71.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
