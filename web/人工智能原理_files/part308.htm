<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>13.21 博弈中的谋算策略</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part307.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part309.htm">下一个 &gt;</a></p><p class="s8" style="padding-top: 11pt;padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="bookmark284">13.21 </a><span class="s9">博弈中的谋算策略</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">定义 <span class="s10">13.20 </span>中的博弈获胜准则从理论上保证了一个玩家存在获胜策略。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">条件就是实现定义 <span class="s10">13.20 </span>中的博弈获胜准则的所有条件。怎样实现博弈获胜准则的条件？实现博弈获胜准则的方法是：</p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 35pt;text-indent: 0pt;text-align: left;">定义 <span class="s14">13.21</span><span class="p">（谋算模型）</span>谋算模型<span class="p">按如下步骤进行：</span></h4><p style="padding-top: 9pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">1</span>）（观察）观察所有玩家，建立所有玩家关系的初始信息系统</p><p class="s11" style="padding-top: 13pt;padding-left: 14pt;text-indent: 0pt;text-align: left;">𝐴<span class="s15">0</span><span class="p">；</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">（<span class="s10">2</span>）（生成策略）基于初始信息系统 <span class="s11">𝐴</span><span class="s17">0</span>，采取生成策略 <span class="s11">𝐺</span>，生成不可约非负矩阵 <span class="s11">𝐴</span>，即 <span class="s11">𝐺(𝐴</span><span class="s17">0</span><span class="s11">) = 𝐴</span>；</p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 18pt;text-align: left;">（<span class="s10">3</span>）（解码策略：层谱抽象）求解 <span class="s11">𝐴  </span>的层谱抽象，即信息系统</p><p class="s11" style="padding-top: 13pt;padding-left: 14pt;text-indent: 0pt;text-align: left;">𝐴 <span class="p">的编码树 </span>𝑇<span class="p">；</span></p><p style="padding-top: 13pt;padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">（<span class="s10">4</span>）（解码信息）计算层谱抽象策略 <span class="s11">𝑇</span>，从信息系统 <span class="s11">𝐴  </span>中的解码信息 <span class="s11">𝒟</span><span class="s19">𝑇</span><span class="s11">(𝐴)</span>；</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">（<span class="s10">5</span>）（原理）如果解码信息 <span class="s11">𝒟</span><span class="s19">𝑇</span><span class="s11">(𝐴)  </span>适当大，那么对任意一个节点 <span class="s11">𝛼 ∈ 𝑇</span>，<span class="s11">𝑇</span><span class="s15">𝛼    </span>是一个真实的由玩家构成的模块；</p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 18pt;text-align: left;">（<span class="s10">6</span>）（共性提取）对每一个 <span class="s11">𝛼 ∈ 𝑇</span>，<span class="s11">𝛼 ≠ 𝜆</span>，提取 <span class="s11">𝑇</span><span class="s15">𝛼    </span>中玩家的共</p><p style="padding-top: 12pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">性 <span class="s11">𝐶</span><span class="s15">𝛼</span><span class="s10">;</span></p><p style="padding-top: 12pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">7</span>）（共性博弈策略）对每一个 <span class="s11">𝛼 ∈ 𝑇</span>，<span class="s11">𝛼 ≠ 𝜆</span>，如果 <span class="s11">𝑇</span><span class="s15">𝛼    </span>的共性</p><p class="s11" style="padding-top: 12pt;padding-left: 14pt;text-indent: 0pt;text-align: left;">𝐶<span class="s15">𝛼</span><span class="s41"> </span>≠ 𝜙<span class="p">，基于共性 </span>𝐶<span class="s15">𝛼</span><span class="s41"> </span><span class="p">设计策略 </span>𝑆<span class="s15">𝛼</span><span class="p">；</span></p><p style="padding-top: 11pt;padding-left: 7pt;text-indent: 27pt;line-height: 167%;text-align: left;">对于玩家 <span class="s11">𝑦 ∈ 𝑇</span><span class="s15">𝛼</span>，称 <span class="s11">𝑦  </span>是共性可满足的，如果 <span class="s11">𝑦  </span>服从策略 <span class="s11">𝑆</span><span class="s15">𝛼</span>，否则称 <span class="s11">𝑦  </span>不是共性可满足的。</p><p style="padding-top: 1pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">8</span>）（独立可满足策略）对每一个 <span class="s11">𝛼 ∈ 𝑇</span>，<span class="s11">𝛼 ≠ 𝜆</span>，如果存在 <span class="s11">𝑦 ∈</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s11" style="padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">𝑇<span class="s15">𝛼</span></p><p style="padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: left;">使得 <span class="s11">𝑦 </span>不是共性可满足的，那么设计 <span class="s11">𝑦 </span>的策略 <span class="s11">𝑆</span><span class="s19">𝑦</span>，使得 <span class="s11">𝑦 </span>服</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">𝛼</p><p style="text-indent: 0pt;text-align: left;"/><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">𝛼</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">从策略 <span class="s11">𝑆</span><span class="s19">𝑦</span>，称 <span class="s11">𝑦 </span>是独立可满足的，否则称 <span class="s11">𝑦 </span>是不可满足的；</p><p style="padding-top: 13pt;padding-left: 7pt;text-indent: 27pt;line-height: 172%;text-align: left;">（<span class="s10">9</span>）（不可满足博弈策略）对于每一个不可满足玩家 <span class="s11">𝑦</span>，设计限制策略 <span class="s11">𝑟</span><span class="s15">𝑦</span>，使得 <span class="s11">𝑦  </span>只能接受 <span class="s11">𝑟</span><span class="s15">𝑦</span>。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: left;">定义 <span class="s10">13.21 </span>中的谋算模型为每一个玩家设计了最优的或唯一可选的博弈策略，从而实现了可解释的必然的获胜策略。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 174%;text-align: justify;">谋算模型通过层谱抽象和分而治之方法结合实现了博弈中的先胜而后战，即只在确保必胜的条件下才参战。这就是博弈<span class="s10">/</span>谋算理论的目标。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part307.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part309.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
