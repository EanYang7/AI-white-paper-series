<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.5.3 神经符号系统的挑战及未来研究方向</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part55.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part57.htm">下一个 &gt;</a></p><p class="s14" style="padding-left: 7pt;text-indent: 0pt;line-height: 23pt;text-align: left;"><a name="bookmark57">2.5.3 </a><span class="h4">神经符号系统的挑战及未来研究方向</span></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">前文详细介绍了神经符号系统的研究现状，在此基础上<span class="s10">,</span>本节尝试分析目前的神经符号系统面临的主要挑战，以及未来的研究方向。</p><p class="s10" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">1.<span class="p">推断方法</span></p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">从概率图的角度建模神经符号系统时，计算阶段依然存在推理困</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;">难的问题。例如，基于 <span class="s10">MLN </span>模型，如果逻辑规则数量多且实体规模较大，那么实例化的数量将呈“指数级”增长，导致模型推理的速度迅速下降。例如，实体的数量是 <span class="s39">n</span>，一个 <span class="s39">m </span>元谓词实例化，需要 <span class="s39">n</span><span class="s45">m</span><span class="s39"> </span><a href="part327.htm#bookmark454" class="a">种方式。针对该问题，尽管已经提出了一些改进方法</a><span class="s20">[196]</span><a href="part327.htm#bookmark454" class="s5"> </a><span class="s20">[197]</span><span class="s10"> </span>，但其仍然存在局限性，例如常用的近似推断是以减少数据的使用率和牺牲推理准确性为代价提高推理速度的。因此，结合深度学习模型的特征，为 <span class="s10">MLN </span>等统计关系学习模型设计规则实例化的选取方法及快速推理算法是神经符号系统亟需解决的一个问题。</p><p class="s10" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">2.<span class="p">规则自动构建</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">上述神经符号系统模型使用的规则通常都是领域专家人工构建好的，这种构建方式费时费力且不具有可扩展性。如何从数据中端到端的学习出刻画先验知识的规则<span class="s10">,</span>也是神经符号系统面临的一个挑战问题。目前，人们探索并扩展基于 <span class="s10">ILP </span>的方法解决规则的自动构建问题，但该类方法存在推理过程复杂且发现的规则比较简单（只能发现单链式规则）等问题。为此，端到端的规则自动构建也是神经符号系统未来需要关注的方向。</p><p class="s10" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">3.<span class="p">符号表示学习</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">好的符号表示能够使看似复杂的学习任务变得更加容易和高效。例如，在零次图像分类任务中，引入符号知识对提升模型的分类能力至关重要，如果学得的符号表示包含较少所需的语义信息，那么分类模型将不胜任复杂的分类任务。目前，多数符号表示方法都不能很好地处理具有强相似性的谓词（语义相似但字面意思不同）。若两个谓词语义相似，但逻辑公式形式不同，当前的符号表示学习方法就不能捕获到一致的语义，从而损害了模型的推理能力。因此，如何设计更加鲁棒和高效的符号表示学习方法是神经符号系统面临的一个重要挑战。随着图表示学习的发展，将节点映射为低维、稠密、连续的向量，可以灵活的嵌入到各类学习和推理任务。很多符号知识都可以建</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">模为异质、多关系、甚至多模态的有向图或无向图，如何发展和利用异质图表示学习方法解决神经符号系统面临的挑战也是一个值得探索的方向。</p><p class="s10" style="padding-left: 34pt;text-indent: 0pt;text-align: left;">4.<span class="p">应用领域扩展</span></p><p class="s20" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><a href="part327.htm#bookmark455" class="a">目前，神经符号系统主要应用于计算机视觉与自然语言处理领域，并取得了不错的效果。此外，一些工作还探索了如何利用神经符号系统解决推荐系统的可解释性问题</a>[198]<span class="s10"> </span><a href="part327.htm#bookmark456" class="a">和网络节点的分类问题</a><a href="part327.htm#bookmark456" class="s33">[199]</a></p><p class="s20" style="padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;">[200]<span class="s10"> </span><span class="p">。因此，一个很自然的想法是，神经符号系统还能有效解决哪些领域的问题，如何针对共性和特点（特殊性）设计相应的模型和方法。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part55.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part57.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
