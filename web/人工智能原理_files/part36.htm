<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.1.2 命题推理问题</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part35.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part37.htm">下一个 &gt;</a></p><p class="s14" style="padding-left: 7pt;text-indent: 0pt;line-height: 22pt;text-align: left;"><a name="bookmark36">2.1.2 </a><span class="h4">命题推理问题</span></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">命题知识库通常表示为命题公式，库中的知识表示为被该公式蕴含的所有公式，因此命题推理问题通常可表示为知识库的查询问题。本文中涉及到的推理问题如下：</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">（<span class="s10">1</span>）判定知识库的一致性，也即判定对应命题公式的可满足性。该问题的重要性主要来源于两方面。第一，<span class="s23"></span>不满足<span class="s23"></span>当且仅当<span class="s23"></span><span class="s10"> </span><span class="s23"></span><span class="s10"> </span><span class="s23"></span>可满足，因此该问题在自动推理中处于核心位置。第二，<span class="s10">SAT </span>问题是第一个被证明为 <span class="s10">NP </span>完全的问题，其多项式时间的求解算法将导致所有 <span class="s10">NP </span>中问题皆能在多项式时间求解。由于任意逻辑公式的可满足性问题都可转化为某个线性大小的 <span class="s10">CNF </span>公式的可满足性问题，且 <span class="s10">CNF</span>公式的可满足性问题也是 <span class="s10">NP </span>完全的，因此有时 <span class="s10">SAT </span>问题也简单表示为 <span class="s10">CNF </span>公式的可满足性问题，<span class="s10">k-CNF </span>公式的可满足性问题相应称为 <span class="s10">kSAT </span>问题。当 <span class="s10">k </span><span class="s23"></span><span class="s10"> 3 </span>时，<span class="s10">kSAT </span>问题是 <span class="s10">NP </span>完全的，而 <span class="s10">2SAT </span>问题为 <span class="s10">NL </span>完全的。</p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">2</span>）判定知识库的有效性。该问题与 <span class="s10">SAT </span>问题互补，是 <span class="s10">co-NP</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">完全的。</p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">（</span>3<span class="p">）判定知识库是否蕴含某个子句。由于任意公式都可表示为等价的</span>CNF <span class="p">公式，而知识库蕴含一个 </span>CNF <span class="p">公式当且仅当其蕴含 </span>CNF<a href="part327.htm#bookmark301" class="a">中所有子句，因此任意表示语言是否支持多项式时间的子句蕴含判定算法是衡量该语言易处理性的最基本标准</a><span class="s20">[14]</span><a href="part327.htm#bookmark301" class="s5"> </a><span class="s20">[15]</span> <span class="p">。</span></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">（<span class="s10">4</span>）判定某个项是否蕴含知识库。该问题与子句蕴含判定问题互补，在基于模型的诊断领域有重要应用。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">（<span class="s10">4</span>）计算知识库的模型数。<span class="s10">CNF </span>公式的模型计数问题为<span class="s10">#P </span>完全 问题，模型计数问题在人工智能和形式化验证领域具有众多应用场景，</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark302" class="a">例如，解决多种概率推理问题，如贝叶斯网络推理可以高效地转化为模型计数问题</a><span class="s20">[16]</span> <a href="part327.htm#bookmark303" class="a">，文献</a><span class="s20">[17]</span> <span class="p">提出的基于加权模型计数的贝叶斯推理方法是目前最快的精确贝叶斯推理方法</span>.<span class="p">此外</span>,<span class="p">模型计数还在自动规划</span></p><p class="s20" style="padding-left: 7pt;text-indent: 0pt;text-align: justify;">[18]<span class="s10"> </span><a href="part327.htm#bookmark305" class="a">、神经网络验证</a>[19]<span class="s10"> </span><span class="p">等领域有着广泛的应用场景。</span></p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;"><span class="p">（</span>5<a href="part327.htm#bookmark306" class="a">）枚举知识库的所有模型。该操作在产品配置中有重要应用，可用于枚举出所有满足用户需求的方案</a><a href="part327.htm#bookmark306" class="s33">[20</a><span class="s20">]</span>   <span class="p">。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">（</span>6<a href="part327.htm#bookmark307" class="a">）判定知识库间的等价性。该问题在电子设计自动化领域有 重要应用，可用于确定两种电路设计是否表现出完全相同的行为</a><span class="s20">[21]</span> <span class="p">。</span></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">7</span>）判定知识库间的蕴含关系。</p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">（</span>8<a href="part327.htm#bookmark308" class="a">）计算知识库的最小度。知识库的最小度在某些应用中代表明确的语义。例如，在基于模型的诊断中，最小度可表示给定可观察系统中最小的故障数；又如，在自动规划中，可用于表示得到指定目标所需的最少动作数</a><span class="s20">[22]</span> <span class="p">。</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part35.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part37.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
