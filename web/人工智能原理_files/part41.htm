<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.2.1 自动定理证明的起源、发展与现状</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part40.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part42.htm">下一个 &gt;</a></p><p class="s14" style="padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;"><a name="bookmark41">2.2.1 </a><span class="h4">自动定理证明的起源、发展与现状</span></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">第一个可运行的定理证明程序是</span>1954 <span class="p">年由逻辑学家</span>Martin Davis<span class="p">完成，实现了普利斯伯格算术</span>(Presburger Arithmetic)<a href="part327.htm#bookmark348" class="a">的判定过程</a><span class="s20">[68]</span> <span class="p">。自然数的一阶理论又称皮亚诺算术，包括自然数的加法和乘法，普利斯伯格算术是皮亚诺算术的一个子集，只有加法没有乘法。皮亚诺算术不可判定，但普利斯伯格算术则是可判定的。这个证明器证明了“两个偶数之和还是偶数”。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">1956 <span class="p">年的达特茅斯人工智能讨论会议被认为是人工智能研究领域的起源。讨论会上，</span>Newell <span class="p">和 </span>Simon <span class="p">发表《逻辑理论机》（</span>The Logic</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;">Theory Machine<span class="p">），被认为是自动定理证明（</span>Automated Theorem Proving<span class="p">， </span>ATP<a href="part327.htm#bookmark349" class="a">）领域的第一篇论文</a><a href="part327.htm#bookmark349" class="s33">[69</a><span class="s20">]</span>   <span class="p">。逻辑理论机的目标是想机械地模仿人 类在证明命题逻辑时所用的推导过程，它可以证明怀海特和罗素《数 学原理》第一卷中命题逻辑部分的一个很大的子集。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">1957 <span class="p">年 </span>Dag Prawwitz <span class="p">和他父亲编程实现了根岑 </span>Gentzen <a href="part327.htm#bookmark350" class="a">提出的自然演绎，发表了影响深远的论文，在论文中提出合一的概念</a><span class="s20">[70]</span> <span class="p">。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">1959 <span class="p">年 </span>IBM <span class="p">的 </span>Gelernter <a href="part327.htm#bookmark351" class="a">等人实现几何定理证明器</a><span class="s20">[71]</span> <span class="p">。该系统 采用“反向链”的推理方法，从目标开始向前提产生新的子目标，这 些子目标逻辑蕴涵最终目标。几何定理证明器能够证明直线图形中的 大部分高中考试的问题，并且运行时间也常常与高中生解题时间近似。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">同年，与 </span>Gelernter <span class="p">同项目组的同事 </span>Gilmore <span class="p">实现了基于语义表 </span>(Semantic Tableau)<a href="part327.htm#bookmark352" class="a">方法的定理证明器，被认为是对谓词演算的第一个可用的机械证明程序</a><span class="s20">[72]</span> <span class="p">。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">1958 <span class="p">年至 </span>1960 <span class="p">年间，王浩先后实现了三个 </span>ATP <a href="part327.htm#bookmark353" class="a">程序</a><span class="s20">[73]</span> <span class="p">：一个完全的命题逻辑程序，一个谓词逻辑程序及其改进。其改进的谓词逻辑程序在 </span>40 <span class="p">分钟内证明了《数学原理》中全部的 </span>150 <span class="p">条谓词逻辑以</span></p><p style="padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: justify;">及 <span class="s10">200 </span>条命题逻辑定理。王浩的这项工作说明让机器拥有人类的技巧已不再是一种游戏。</p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">Gilmore <span class="p">方法的理论基础是 </span>Herbrand <span class="p">定理：为证明某谓词逻辑公式的恒假性，转化为去证明该谓词逻辑公式在 </span>Herbrand <a href="part327.htm#bookmark354" class="a">域上实例化得到的命题公式的恒假性</a><span class="s20">[75]</span> <span class="p">。在证明命题公式恒假性时，</span>Gilmore <span class="p">采用了最原始的“乘法方法”。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">1960 <span class="p">年，</span>Martin Davis <span class="p">和 </span>Hilary Putnam <span class="p">对 </span>Gilmore <span class="p">方法做了改进，提出所谓的 </span>D-P <a href="part327.htm#bookmark355" class="a">过程</a><a href="part327.htm#bookmark355" class="s33">[76</a><span class="s20">]</span>   <span class="p">，后进化为当前使用的 </span>DPLL <a href="part327.htm#bookmark356" class="a">过程</a><a href="part327.htm#bookmark356" class="s33">[77</a><span class="s20">]</span>   <span class="p">。但是，</span>D-P <span class="p">过程对</span>Gilmore <span class="p">方法的改进不是本质的，因为这两种方法，都需要枚举基替换，去产生恒假的命题公式。</span></p><p class="s10" style="padding-left: 34pt;text-indent: 0pt;text-align: justify;">1960 <span class="p">年 </span>Dag Prawitz <span class="p">发表论文，指出 </span>D-P <span class="p">过程的这个致命弱点，</span></p><p class="s10" style="padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark350" class="a">并给出了改进</a><span class="s20">[70]</span> <span class="p">。</span>Prawitz <span class="p">不再枚举替换去产生恒假的命题公式，而是主动去寻找产生这个恒假命题公式的那个替换。</span>Prawitz <span class="p">的“直接寻找替换，从而避免产生公式的组合爆炸”这种思想是深刻的，使用了人工智能中的匹配技术。但 </span>Prawitz <span class="p">在实现这种想法时，效果却很不理想。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">1960 <span class="p">年前后的三年间，是自动定理证明领域中逻辑方法的一段重要时间。基于 </span>Herbrand <span class="p">定理的</span>Gilmore <span class="p">方法，</span>D-P <span class="p">过程，尤其是 </span>D- P <span class="p">过程中的单文字规则和 </span>Prawitz <span class="p">的匹配思想，最终导致归结原理的产生。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">1964 <span class="p">年 </span>J.A.Robinson <a href="part327.htm#bookmark357" class="a">提出简洁而漂亮的归结原理</a><span class="s20">[78]</span> <span class="p">。被 </span>Robinson <span class="p">用归结原理所形式化的逻辑里，没有公理，只有一条使用合一替换的推导规则。而如此简洁的逻辑系统，却是谓词演算中的一个完备系统：任意一个恒真的一阶公式，在 </span>Robinson <span class="p">的逻辑系统中都是可证的。</span></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">重要的改进工作包含：</p><p class="s10" style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">1964 <span class="p">年 </span>Wos<span class="p">，</span>Carson <span class="p">和 </span>G. Robinson <span class="p">提出了单文字子句优先处理</span></p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;"><span class="s20">[79]</span> <a href="part327.htm#bookmark359" class="a">和支撑集策略</a><span class="s20">[80]</span> <span class="p">。</span>1965 <span class="p">年 </span>J.A.Robinson <span class="p">提出超归结方法。</span>1967<a href="part327.htm#bookmark360" class="a">年提出语义归结</a><span class="s20">[81]</span> <span class="p">。</span>1968 <span class="p">年</span>Loveland <span class="p">和</span>Luckham<a href="part327.htm#bookmark361" class="a">提出线性归结</a><span class="s20">[82]</span> <span class="p">。 </span>1970 <span class="p">年</span>Boyer <span class="p">提出锁归结。</span>1970 <span class="p">年提出 </span>SL-<a href="part327.htm#bookmark362" class="a">归结</a><span class="s20">[83]</span> <span class="p">，被用于早期的 </span>PROLOG <span class="p">语言中。</span>1970 <span class="p">年 </span>C.L.Chang <a href="part327.htm#bookmark363" class="a">提出输入归结，并证明其和单元归结等价</a><span class="s20">[84]</span> <span class="p">。</span>1982 <span class="p">年 </span>Murray <span class="p">提出 </span>NC<span class="p">（</span>Non-Clausal<a href="part327.htm#bookmark364" class="a">）归结</a><span class="s20">[85]</span> <span class="p">。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">相等是数学中重要且常见的概念，对于包含等词的公式进行推理 需要特殊的规则：</span>Wos <span class="p">等人提出 </span>Paramodulation <a href="part327.htm#bookmark365" class="a">调解方法</a><span class="s20">[86]</span> <span class="p">，调解 方法被推广为</span>superposition <a href="part327.htm#bookmark367" class="a">方法，成为现代定理证明器的理论和实践 基础</a><span class="s20">[88]</span> <span class="p">。方程式（等式）是一阶逻辑的子集，即只有一个谓词 </span>EQUAL<span class="p">。 </span>BirkHoff <a href="part327.htm#bookmark368" class="a">证明了方程逻辑是完全的。在项重写</a><span class="s20">[89]</span> <span class="p">中，证明就是将一 个符号串（实际上是谓词逻辑中的项）根据给定的等式重写成另一符</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">号串。为减少生成的项的数量，引入项之间的序关系来限制重写。 <span class="s10">Knuth-Bendix Ordering </span>是上世纪七十年代提出的用于项重写的主要技<a href="part327.htm#bookmark369" style=" color: black; font-family:仿宋, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; vertical-align: -5pt;">术</a><span class="s22">[90] </span><span class="s21">。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">上世纪八十年代后，自动定理证明领域没有突破性的进展，但该方向逐渐改名为自动推理，希望计算机程序成为一种工具，能够自动完成各种需要的推理任务。 自动推理领域的归结会议是 </span><a href="part327.htm#bookmark370" class="s5">CADE(Conference of Automated DEduction)</a><span class="s20">[91]</span> <span class="p">和 </span><a href="part327.htm#bookmark371" class="s5">IJCAR(International Conference of Automated Reasoning)</a><span class="s20">[92]</span> <span class="p">，它们都是双年会议，每年两个会议交替召开。</span>CASC (CADE ATP System Competition) <span class="p">是至今每年仍在 </span>CADE <span class="p">或 </span>IJCAR <a href="part327.htm#bookmark372" class="a">会议上举办的自动定理证明系统比赛</a><span class="s20">[93]</span> <span class="p">，赛题来自</span>TPTP (Thousands Problems for Theorem Provers)<span class="p">，</span>TPTP <span class="p">是定理证明器的公认的</span><a href="part327.htm#bookmark373" class="s5">benchmark</a>[94] <span class="p">。历年的</span>CASC <span class="p">冠军中包括</span><a href="part327.htm#bookmark374" class="s5">Otter</a><span class="s20">[95]</span><a href="part327.htm#bookmark375" class="s5"> , Vampire</a><span class="s20">[96]</span> <span class="p">等著名定理证明器。归结原理导致的组合爆炸仍然需要启发式方法的帮助，定理证明领域陷入停滞状态。近年，谷歌团队的实验表明，简单的卷积神经网络可以帮助定理证明器挑选子句从而提高</span><a href="part327.htm#bookmark376" style=" color: black; font-family:仿宋, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; vertical-align: -5pt;">性能</a><span class="s22">[97] </span><span class="s21">。</span></p><p class="s20" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark377" class="a">另一方面，研究者们在几何定理证明与计算机代数方向取得比较满意的结果，代表性的工作为吴文俊院士在上世纪七十年代针对特定初等几何问题得到高效的算法</a>[98]<span class="s10"> </span><span class="p">，并且被推广到一类微分几何问题</span><a href="part327.htm#bookmark378" style=" color: black; font-family:仿宋, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; vertical-align: -5pt;">上</a><span class="s22">[99] </span><span class="s21">。</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part40.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part42.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
