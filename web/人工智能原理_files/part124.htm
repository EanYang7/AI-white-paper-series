<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>7.2.1 合作博弈</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part123.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part125.htm">下一个 &gt;</a></p><p class="s14" style="padding-left: 7pt;text-indent: 0pt;line-height: 25pt;text-align: left;"><a name="bookmark129">7.2.1 </a><span class="h4">合作博弈</span></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">不同于非合作博弈聚焦局中人（</span>Player<a href="part332.htm#bookmark613" class="a">）的竞争和均衡策略，博 弈论中的另一个分支主要研究局中人（或智能体）之间的合作，即所 谓的合作博弈理论</a><a href="part332.htm#bookmark613" class="s33">[1</a><span class="s20">]</span><a href="part332.htm#bookmark613" class="s5">   </a><a href="part332.htm#bookmark613" class="s33">[3</a><span class="s20">]</span>   <span class="p">。现有合作博弈相关文献分为两个主要模型，一个模型允许比较两个局中人之间的效用并存在效用转移（即可转移 效用博弈（</span>Transferable  Utility game<span class="p">）），另一个模型中则不允许比较</span></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">（即不可转移效用博弈）。在可转移效用博弈中，一个局中人联盟</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">（<span class="s10">Coalition</span>）生成一个价值，通过合作达到共同得到的价值。联盟的成员必须分享他们联盟的价值，因此他们需要相互比较效用并能转移一些效用到彼此之间。而在不可转移效用博弈中，局中人对不同联盟有偏好，但他们无法提供任何补偿。本节中，我们主要聚焦前者<span class="s10">—</span>可转移效用博弈。</p><p class="s10" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">7.2.1.1 <span class="s37">可转移效用博弈</span></p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: justify;">一般地，可转移效用博弈包括一组局中人<span class="s11">𝑁</span>和一个特征函数</p><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">𝑣: 2<span class="s19">𝑁</span>  → 𝑅<span class="p">，为每个可能的联盟或局中人子集合提供一个价值。该特征函数为整个人群所共知，联盟的价值仅取决于联盟中的参与者。可转移效用博弈主要关注两个问题：应该形成什么联盟（即如何将集合 </span><span class="s39">N</span><span class="p">划分为联盟），以及如何将联盟的价值分给每个成员。我们首先详细定义可转移效用博弈，然后介绍一些理想的解性质和主流的合作博弈解概念。</span></p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">考虑一个包含<span class="s11">𝑛</span>个局中人的集合<span class="s11">𝑁 = {1, 2, ⋯ , 𝑛}</span>。一个<span class="h4">联盟</span>是指</p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">集合<span class="s11">𝑁</span>的一个非空子集<span class="s11">𝐶 ⊆ 𝑁 </span>。特别地，集合<span class="s11">𝑁</span>也被称为大联盟</p><p class="s16" style="text-indent: 0pt;line-height: 10pt;text-align: left;">𝑖=1</p><p style="text-indent: 0pt;text-align: left;"/><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 134%;text-align: left;"><span class="p">（</span><span class="s10">Grand Coalition</span><span class="p">）。所有可能联盟的集合定义为</span>𝒞<span class="p">，其基数为</span>2<span class="s19">𝑛</span><span class="p">。一个联盟结构（</span><span class="s10">Coalition Structure</span><span class="p">）是指</span>𝑆 = {𝐶<span class="s15">1</span>, 𝐶<span class="s15">2</span>, ⋯ , 𝐶<span class="s15">𝑚</span>}<span class="p">是集合</span>𝑁<span class="p">的一个划分：每个</span>𝐶<span class="s15">𝑖</span><span class="p">是一个联盟并且满足</span>∪<span class="s19">𝑚</span>    𝐶<span class="s15">𝑖  </span>= 𝑁<span class="p">和对于任意的</span>𝑖 ≠ 𝑗<span class="p">，满足</span>𝐶<span class="s15">𝑖  </span>∩ 𝐶<span class="s15">𝑗  </span>= ∅<span class="p">。一个特征函数（</span><span class="s10">Characteristic Function</span><span class="p">）</span>𝑣: 2<span class="s19">𝑁</span>  → 𝑅<span class="p">反映了一个联盟的价值或者效用。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><h4 style="padding-left: 35pt;text-indent: 0pt;line-height: 25pt;text-align: left;">定义 <span class="s14">1</span>（可转移效用博弈）： <span class="p">一个可转移效用博弈被定义为一个</span></h4><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">二元组<span class="s11">𝐺 = (𝑁, 𝑣)</span>，其中<span class="s11">𝑁</span>是局中人的集合，<span class="s11">𝑣</span>是一个特征函数。</p><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 138%;text-align: left;"><span class="p">特征函数描述了一组局中人的价值，而不是单一局中人的收益。我们定义支付分配（</span><span class="s10">Payoff Distribution</span><span class="p">）</span>𝑥 = (𝑥<span class="s15">1</span>, 𝑥<span class="s15">2</span>, ⋯ , 𝑥<span class="s15">𝑛</span>)<span class="p">，其中</span>𝑥<span class="s15">𝑖</span><span class="p">是局中人</span>𝑖<span class="p">的收益，用于刻画如何将联盟的价值分享给局中人。通常也使用记号</span>𝑥(𝐶) = ∑<span class="s15">𝑖∈𝐶</span>𝑥<span class="s15">𝑖</span><span class="p">代表联盟</span>𝐶<span class="p">中所有局中人的收益之和。如果</span>𝑆<span class="p">是一个联盟结构，</span>𝑥<span class="p">是一个支付分配，那么我们称一个二元组</span>(𝑆, 𝑥)<span class="p">为支付配置（</span><span class="s10">Payoff Configuration</span><span class="p">），并记所有支付配置的集合为</span>𝒫<span class="p">。此时，我们可以回答本节一开始的问题。可转移效用博弈的解就是一个支付配置</span>(𝑆, 𝑥)<span class="p">，反映如何形成联盟和如何分配联盟价值。接下来我们介绍一些关于支付分配的理性概念，即一些连接联盟价值和个人收益的性质。</span></p><h4 style="padding-left: 35pt;text-indent: 0pt;line-height: 21pt;text-align: left;">有效性（<span class="s14">Efficiency</span>）：<span class="s11">𝑥(𝑁) = 𝑣(𝑁)</span><span class="p">。支付分配将整个大联盟的总</span></h4><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;">价值分配给所有局中人。换句话说，整个群体在某种程度上没有失去任何效用。</p><p class="s11" style="padding-left: 35pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><span class="h4">个体理性（</span><span class="s14">Individual Rationality</span><span class="h4">）：</span><span class="p">只有当每个局中人</span>𝑖<span class="p">满足</span>𝑥<span class="s15">𝑖  </span>≥</p><p class="s11" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;">𝑣({𝑖})<span class="p">时，它才会成为该联盟的成员（即加入一个联盟后要比单独行动更有利）。</span></p><h4 style="padding-left: 35pt;text-indent: 0pt;line-height: 21pt;text-align: left;">群体理性（<span class="s14">Group Rationality</span>）：<span class="p">对于任意联盟</span><span class="s11">𝐶 ⊆ 𝑁</span><span class="p">，满足</span><span class="s11">𝑥(𝐶) ≥</span></h4><p class="s11" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;">𝑣(𝐶)<span class="p">。一个联盟的收益之和应该至少等于该联盟的价值（即在联盟层面上不应有任何损失）。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">因为联盟形成问题的解是一个支付配置，所以寻找联盟结构（即寻找形成了哪些联盟）和找到支付分配（即在成员之间分享联盟的价值）的问题通常不能分开处理。现有文献中提出的不同解概念：如核心（</span>Core<a href="part332.htm#bookmark615" class="a">）</a><span class="s20">[4]</span> <span class="p">、核仁（</span>Nucleolus<a href="part332.htm#bookmark616" class="a">）</a><span class="s20">[5]</span> <span class="p">、核（</span>Kernel<a href="part332.htm#bookmark617" class="a">）</a><span class="s20">[6]</span> <span class="p">、</span>Shapely <span class="p">值</span></p><p class="s20" style="padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: justify;">[7]<span class="s10"> </span><a href="part332.htm#bookmark619" class="a">等</a>[8]<a href="part332.htm#bookmark620" class="s5"> </a>-[10]<span class="s10"> </span><span class="p">。每种解都有各自的优缺点，不存在一个解比其他所有解方案更好。此处，我们主要介绍核心和 </span><span class="s10">Shapely </span><span class="p">值的概念及相关结</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">果，如果读者对其他解概念感兴趣，可以参考相关文献。</p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">7.2.1.2 <span class="s37">核心（</span>Core<span class="s37">）</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">核心是由<span class="s10">Gillies </span>在 <span class="s10">1953 </span>年提出，侧重于联盟的稳定性。简言之，当没有一组局中人有任何动机组建另一个联盟时，支付分配就在核心中。详细地说，</p><p style="padding-left: 35pt;text-indent: 0pt;line-height: 22pt;text-align: justify;"><span class="h4">定义 </span><span class="s14">2</span><span class="h4">（核心）：</span>一个支付分配<span class="s11">𝑥 ∈ ℝ</span><span class="s19">𝑛</span>是博弈（<span class="s11">𝑁, 𝑣</span>）的核心，当</p><p class="s11" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="p">且仅当</span>𝑥<span class="p">满足有效性、个体理性和群体理性，即</span>𝑐𝑜𝑟𝑒(𝑁, 𝑣) = {𝑥 ∈ ℝ<span class="s19">𝑛</span>|∑<span class="s15">𝑖∈𝑁</span>𝑥<span class="s15">𝑖</span><span class="s41"> </span>= 𝑣(𝑁) ∩ 𝑥(𝐶) ≥ 𝑣(𝐶), ∀𝐶 ⊆ 𝑁}<span class="p">。</span></p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 17pt;text-align: left;">直觉上，核心反映了没有任何一组局中人有拒绝当前支付分配的</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">动机，也就是说，没有任何一组局中人可以通过组建其他联盟来获得更多支付，那么这个支付分配就在核心中。注意，这个条件必须对<span class="s11">𝑁</span>的所有子集都成立，特别是对于所有单元素子集，这可以确保个人合理性。不难发现核心是一种满足线性不等式的支付结构，因此核心是封闭的和凸的。</p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;"><span class="p">然而，核心的概念存在多个问题。首先，核心可能是空的：某些特征函数会产生冲突使得无法同时满足所有玩家。当核心为空时，至少有一名玩家对支付分配不满意，因此会阻止联盟形成。其次，采用核心作为稳定概念的另一个问题与计算复杂性有关。判定一种支付分配是否在核心中是 </span>NP <a href="part332.htm#bookmark621" class="a">难问题</a><span class="s20">[11]</span> <span class="p">。此外，确定核心的非空性，即使对于具有超加性（</span>Superadditive<span class="p">）的博弈，也是 </span>NP <a href="part332.htm#bookmark621" class="a">难问题</a><span class="s20">[11]</span> <a href="part332.htm#bookmark622" class="a">，尽管存在一种转移方案可以收敛到核心</a><span class="s20">[12]</span> <span class="p">。此外， </span>Dieckmann <span class="p">和 </span><a href="part332.htm#bookmark623" class="s5">Schwalb</a><span class="s20">[13]</span> <span class="p">介绍了一种技术，可以在非超加性博弈中达到核心分配。此外，一些合作博弈类可以保证核心非空，例如凸博弈。</span>Bondareva <span class="p">和 </span>Shapley <span class="p">独立地对核心非空的博弈类进行了刻画，提出了著名的 </span>Bondareva–Shapley <a href="part332.htm#bookmark614" class="a">定理</a><span class="s20">[2]</span> <span class="p">。</span></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">此外，关于核心的概念也存在一些扩展。如上所述，核心的一个主要问题是它可能为空。特别地，联盟中的一名成员可能阻止形成联</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;"><span class="p">盟以获得微小的回报。如果考虑建立联盟有成本时，可以认为为了获得微小的利益增益而阻止联盟不值得。强</span><span class="s11">𝜖</span>-<span class="p">核心（</span>Strong  <span class="s11">𝜖</span>-core<span class="p">）和弱</span><span class="s11">𝜖</span>-<span class="p">核心（</span>Weak  <span class="s11">𝜖</span>-core<span class="p">）概念描述了这种可能性。相比于核心的约束，强</span><span class="s11">𝜖 </span>-<span class="p">核心（弱</span><span class="s11">𝜖 </span>-<a href="part332.htm#bookmark624" class="a">核心）</a><a href="part332.htm#bookmark624" class="s33">[14</a><span class="s20">]</span>   <span class="p">的约束有适当的放松：</span><span class="s11">∀𝐶 ⊆ 𝑁, 𝑥(𝐶) ≥</span></p><p class="s11" style="padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">𝑣(𝐶) − 𝜖<span class="s10">,  </span><span class="p">（对应地，</span>∀𝐶 ⊆ 𝑁, 𝑥(𝐶) ≥ 𝑣(𝐶) − |𝐶| ⋅ 𝜖<span class="p">）。不难发现，如果</span>𝜖<span class="p">足够大，强</span>𝜖<span class="s10">-</span><span class="p">核心或弱</span>𝜖<span class="s10">-</span><span class="p">核心将不为空。当不断降低</span>𝜖<span class="p">的值时，将存在一个阈值，使得对于</span>𝜖<span class="s19">′</span> &lt; 𝜖<span class="p">，</span>𝜖′<span class="s10">-</span><span class="p">核心将变为空集。这个特殊的</span>𝜖<span class="s10">-</span><span class="p">核心被称为最小核心（</span><span class="s10">Least Core</span><a href="part332.htm#bookmark624" class="a">）</a><a href="part332.htm#bookmark624" class="s33">[14</a><span class="s20">]</span><span class="s10">   </span><span class="p">。</span></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">放宽核心要求的另一种方式是稍微修改博弈。观察核心的约束可以知道，如果能够充分增加大联盟的价值，相应博弈的核心将变得不为空。这便是稳定性成本（<span class="s10">Cost of Stability</span><a href="part332.htm#bookmark625" class="a">）</a><span class="s20">[15]</span><span class="s10"> </span>的思想。给定一个可转移效用博弈<span class="s11">(𝑁, 𝑣)</span>和一个值<span class="s11">Δ ∈ ℝ</span>，我们考虑构建另一个合作博弈</p><p class="s11" style="padding-left: 7pt;text-indent: 0pt;line-height: 140%;text-align: left;"><span class="p">（</span>𝑁, 𝑣<span class="s19">𝛥</span><span class="p">），其中对于所有的</span>𝐶 ⊂ 𝑁, 𝑣<span class="s19">𝛥</span>(𝐶) = 𝑣(𝐶)<span class="p">，但对于大联盟</span>𝑁<span class="p">，满足</span>𝑣<span class="s19">𝛥</span>(𝑁) = 𝑣(𝑁) + 𝛥<span class="p">。稳定性成本定义为最小的</span>𝛥<span class="p">，使得（</span>𝑁, 𝑣<span class="s19">𝛥</span><span class="p">）的核心不为空。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 0pt;line-height: 18pt;text-align: left;">7.2.1.3 Shapley <span class="s37">值</span></p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">到目前为止，许多解概念（如核心、核仁、核）都着眼于收益分配的稳定性，<span class="s10">Shapley </span>值则是关注公平性。<span class="s10">Shapley </span>值于 <span class="s10">1953 </span>由<span class="s10">Shapley</span>提出，从两个不同的方面描述了公平性的概念。第一种是公理化方法： <span class="s10">Shapley  </span>值可以用一组公理来定义，其中每个公理都是公平性的一个属性。第二种方法考虑一个联盟形成过程，在这个过程中，局中人逐个进入联盟并获得边际贡献作为收益。这种联盟形成过程可能是不公平的，因为一个局中人的收益取决于加入顺序。<span class="s10">Shapley  </span>值通过使用所有可能的加入顺序的平均值来反映公平性。我们将从这两种方面给出 <span class="s10">Shapley </span>值的定义：</p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">我们首先呈现几条公理，帮助我们对 <span class="s10">Shapley </span>值进行刻画：</p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">1</span>）有效性（<span class="s10">Efficiency</span>）：<span class="s11">∑</span><span class="s15">𝑖∈𝑁 </span><span class="s11">𝑥</span><span class="s15">𝑖  </span><span class="s11">= 𝑣(𝑁)</span>。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">（<span class="s10">2</span>）无贡献者（<span class="s10">Dummy Player</span>）：我们称一个局中人<span class="s11">𝑖</span>是无贡献者，即对于任意联盟<span class="s11">𝐶</span>，<span class="s11">𝑣(𝐶 ∪ {𝑖}) = 𝑣(𝐶)</span>，则<span class="s11">𝑥</span><span class="s15">𝑖  </span><span class="s11">= 0</span>。</p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 17pt;text-align: left;">（<span class="s10">3</span>）对称性（<span class="s10">Symmetry</span>）：当两个局中人贡献相同的边际价值时，</p><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="p">他们的收益也相同，即如果局中人</span>𝑖 ≠ 𝑗<span class="p">，对于任意的联盟</span>𝐶<span class="p">，如果满足</span>𝑖, 𝑗 ∉ 𝐶<span class="p">且</span>𝑣(𝐶 ∪ 𝑖) = 𝑣(𝐶 ∪ 𝑗)<span class="p">，那么</span>𝑥<span class="s15">𝑖</span><span class="s41"> </span>= 𝑥<span class="s15">𝑗</span><span class="p">。</span></p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 17pt;text-align: left;">（<span class="s10">4</span>）可加性（<span class="s10">Additivity</span>）：对于两个可转移效用博弈<span class="s11">(𝑁, 𝑣)</span>和</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="s11">(𝑁, 𝑤)</span>和对应的支付分配 <span class="s39">x </span>和 <span class="s39">y</span>，有<span class="s11">𝑥 + 𝑦</span>也为博弈<span class="s11">(𝑁, 𝑣 + 𝑤)</span>的支付分配。</p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">每条公理在一定程度上对支付分配函数进行了约束。实际上，</p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">Shapley <span class="p">值是唯一一个满足上述四条公理的支付分配函数。</span></p><p class="s11" style="padding-top: 7pt;padding-left: 7pt;text-indent: 34pt;line-height: 140%;text-align: left;"><span class="s10">Shapley </span><span class="p">值的另一种定义基于有序边际贡献。首先，我们定义一个局中人</span>𝑖<span class="p">对一个联盟</span>𝐶<span class="p">的边际贡献，记为</span>𝑚𝑐<span class="s15">𝑖</span>(𝐶)<span class="p">：</span></p><p class="s11" style="padding-left: 30pt;text-indent: 0pt;line-height: 18pt;text-align: center;">𝑚𝑐<span class="s15">𝑖</span>(𝐶) = 𝑣(𝐶 ∪ 𝑖) − 𝑣(𝐶)<span class="p">。</span></p><p style="padding-top: 5pt;padding-left: 7pt;text-indent: 27pt;line-height: 137%;text-align: justify;">令<span class="s11">π</span>代表一个大联盟<span class="s11">𝑁</span>的加入顺序，亦可视为集合<span class="s11">{1,2, ⋯ , 𝑛}</span>的一个置换（<span class="s10">Permutation</span>）。此时，局中人<span class="s11">𝑖</span>遵循这个顺序加入大联盟时的边际贡献为<span class="s11">𝑚𝑐</span><span class="s15">𝑖</span><span class="s11">({𝑗|𝜋(𝑗) &lt; 𝜋(𝑖)})</span>。记所有置换的集合为<span class="s11">Π(𝑁)</span>，易知其基数为<span class="s11">|Π(𝑁)| = 𝑛!</span>。接下来我们给出 <span class="s10">Shapley </span>值的定义：</p><h4 style="padding-left: 35pt;text-indent: 0pt;line-height: 22pt;text-align: justify;">定义 <span class="s14">3</span>（<span class="s10">Shapley </span><span class="p">值</span>）：<span class="p">给定一个可转移效用博弈</span><span class="s11">𝐺 = (𝑁, 𝑣)</span><span class="p">，对于</span></h4><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 16pt;text-align: justify;">任意局中人<span class="s11">𝑖</span>，对应的 <span class="s10">Shapley </span>值定义为</p><p class="s16" style="padding-left: 171pt;text-indent: 0pt;line-height: 11pt;text-align: left;">∑<span class="s50">𝜋∈𝛱(𝑁)</span><span class="s68"> </span>𝑚𝑐<span class="s50">𝑖</span>({<span class="s69">𝑗</span>|<span class="s69">𝜋(𝑗)</span><span class="s11"> &lt; 𝜋(𝑖)</span><span class="s70">})</span></p><p class="s11" style="text-indent: 0pt;line-height: 17pt;text-align: right;">𝜑<span class="s15">𝑖</span>(𝐺) =</p><p style="padding-left: 51pt;text-indent: 0pt;line-height: 13pt;text-align: center;">。</p><p style="text-indent: 0pt;text-align: left;"><span><img width="205" height="1" alt="image" src="Image_019.png"/></span></p><p class="s16" style="padding-left: 73pt;text-indent: 0pt;line-height: 9pt;text-align: left;">𝑛!</p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">不难发现，上述定义是基于大联盟<span class="s11">𝑁</span>的所有置换。如果我们从联盟的角度去观察每个局中人的<span class="s10">Shapley </span>值，我们可以节省很多计算量，因为我们只需对所有可能的联盟情况进行求和。详细地，如果排在局中人<span class="s11">𝑖</span>前面的为联盟<span class="s11">𝐶</span>，那么我们可以知道前面的局中人有<span class="s11">|𝐶|!</span>中排列，后面的局中人有<span class="s11">(𝑛 − |𝐶| − 1)!</span>排列，因此，我们给出等价的 <span class="s10">Shapley</span>值定义：</p><p class="s11" style="padding-left: 30pt;text-indent: 0pt;line-height: 10pt;text-align: center;">𝜑 (𝐺) = ∑             <span class="s71">|𝐶|!(𝑛−|𝐶|−1)! </span>(𝑣(𝐶 ∪ {𝑖}) − 𝑣(𝐶))<span class="p">。</span></p><p style="padding-left: 180pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="89" height="1" alt="image" src="Image_020.png"/></span></p><p class="s16" style="padding-left: 86pt;text-indent: 0pt;line-height: 9pt;text-align: left;">𝑖                     𝐶⊆𝑁\{𝑖}</p><p class="s16" style="padding-top: 1pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">𝑛!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s10" style="padding-top: 3pt;padding-left: 7pt;text-indent: 34pt;line-height: 139%;text-align: left;"><span class="p">虽然 </span>Shapley <span class="p">值总是存在且唯一，但 </span>Shapley <span class="p">值的本质是基于组 合数，因此需要考虑形成联盟的所有可能顺序，这使得对于一般情况 下直接计算</span>Shapley <span class="p">值并不高效。当某些合作博弈自身具有特殊的结 构性质时，存在一些算法可以高效地计算 </span>Shapley <span class="p">值。另一方面，这 种计算复杂性有时可以成为一个优势，使得局中人无法从操纵中受益。例如，在某些博弈中，单个局中人可以通过伪造多个身份来受益。然 而，确定局中人是否可以从这些虚假身份中受益的复杂性已被证明是 </span>NP <a href="part332.htm#bookmark626" class="a">完全的</a><span class="s20">[16]</span> <span class="p">。</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part123.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part125.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
