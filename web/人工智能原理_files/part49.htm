<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.3 约束可满足性求解</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part48.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part50.htm">下一个 &gt;</a></p><p class="s8" style="padding-left: 7pt;text-indent: 0pt;line-height: 19pt;text-align: left;"><a name="bookmark49">2.3 </a><span class="s9">约束可满足性求解</span></p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 146%;text-align: justify;">“Constraint programming represents one of the closest approaches computer science has yet made to the Holy Grail of programming: the user states the problem, the computer solves it.”<span class="p">这是美国艺术与科学学院院士、</span>AAAI Fellow<span class="p">、约束程序（</span>Constraint Programming<span class="p">，</span>CP<span class="p">）研究领域的开创者和奠基人、著名人工智能学学者、爱尔兰考克大学 </span>Eugene</p><p class="s10" style="padding-left: 7pt;text-indent: 0pt;line-height: 19pt;text-align: left;">Freuder <span class="p">教授 </span>1997 <a href="part327.htm#bookmark383" class="a">年为我们描绘的约束程序未来发展愿景</a><span class="s20">[105]</span> <span class="h4">。</span><span class="p">这也</span></p><p style="padding-left: 7pt;text-indent: 0pt;text-align: left;">毫无疑问是人工智能，乃至计算机科学的最高理想，即<span class="h4">：</span>用户表述问 题，计算机自动求解<span class="h4">。</span>彼时，<span class="s10">CP </span><a href="part327.htm#bookmark384" class="a">这个源于计算机图形学 </a><span class="s20">[106]</span><a href="part327.htm#bookmark384" class="s5"> </a><span class="s20">[107]</span><span class="s10"> </span>的 问题求解方法刚在人工智能研究领域中占有一席之地，尚不广为人知。</p><p style="padding-top: 6pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">进入 <span class="s10">21 </span>世纪后，约束程序研究得到空前快速发展，并已逐步成</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark385" class="a">为人工智能的基本支撑方法和技术</a><a href="part327.htm#bookmark385" class="s33">[108</a><span class="s20">]</span><a href="part327.htm#bookmark385" class="s5">   </a><a href="part327.htm#bookmark385" class="s33">[109</a><span class="s20">]</span><span class="s10">   </span>。<span class="s10">2005 </span>年 <span class="s10">3 </span>月，在法国成立了<span class="s37">“</span>国际约束程序学会<span class="s37">”</span>（<span class="s10">Association for Constraint Programming, ACP</span><a href="part327.htm#bookmark387" class="a">）</a><a href="part327.htm#bookmark387" class="s33">[110</a><span class="s20">]</span><span class="s10">   </span>，会刊为 <span class="s10">International Journal of Constraints</span>，每年定期召</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">开 <span class="s10">CP </span>学术年会。目前，在 <span class="s10">IJCAI, AAAI </span>等权威人工智能国际会议上，与约束程序相关的研究论文数量呈现逐年增长的趋势，越发显示其作为人工智能问题求解方法的重要地位。<span class="s10">IJCAI2011</span>、<span class="s10">IJCAI2013 </span>、 <span class="s10">AAAI2019 </span>和<span class="s10">IJCAI2020 </span>的程序委员会主席分别是或将是澳大利亚新南威尔士大学的 <span class="s10">Toby Walsh </span>教授和意大利帕多瓦大学的 <span class="s10">Francesca Rossi </span>教授，美国密歇根大学 <span class="s10">Pascal Van Hentenryck </span>教授（与南京大学周志华教授同为联合主席） 和法国蒙彼利埃大学的 <span class="s10">Christian Bessiere </span>教授，他们都是蜚声国际专门从事约束程序研究的人工智能学者。</p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">约束程序以人工智能领域著名的约束满足问题（ </span>Constraint Satisfaction Problems, CSPs<a href="part327.htm#bookmark385" class="a">）的建模和求解研究</a><span class="s20">[108]</span><a href="part327.htm#bookmark385" class="s5"> </a><span class="s20">[109]</span> <a href="part327.htm#bookmark385" class="a">为核心，大量来自汽车、交通、航空、电信、教育等领域中的规划、调度、配置、推荐等问题都适合采用约束满足问题来建模和求解</a><span class="s20">[108]</span><a href="part327.htm#bookmark385" class="s5"> </a><span class="s20">[109]</span> <span class="p">，这为约束程序的成功应用提供了天然优越条件。当前，约束程序在工业界取得极大成功。</span>IBM ILOG <span class="p">优化引擎成已成为</span>SAP<span class="p">、</span>Oracle <span class="p">等跨国</span>IT <span class="p">巨头 </span>ERP <a href="part327.htm#bookmark388" class="a">等软件产品的核心优化技术</a><span class="s20">[111]</span> <span class="p">。</span>2014 <span class="p">年 </span>11 <span class="p">月 </span>12 <span class="p">日，欧洲宇航局 </span>10 <span class="p">年前发射的彗星探测器的着陆器“菲莱”成功登陆“丘留莫夫－格拉西缅科”彗星，完成人造探测器的首次彗星登陆壮举，在 “菲莱”执行此次任务及后续实验过程中起主导作用的软件技术是约束传播和基于约束调度方法等 </span>CP <a href="part327.htm#bookmark389" class="a">技术</a><span class="s20">[112]</span><a href="part327.htm#bookmark389" class="s5"> </a><span class="s20">[113]</span> <span class="p">，这为人工智能助力人类太空探索历史留下了浓墨重彩的一笔。</span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark390" class="a">但是，和通用人工智能当前面临的困境类似</a><span class="s20">[114]</span> <span class="p">：具有通用功能的约束程序的建模和求解方法的进展与我们的期望还有距离。尤其在大数据背景下，特别是 </span>2015 <a href="part327.htm#bookmark391" class="a">年以来，在以机器学习飞速进步为代表的新人工智能浪潮冲击下，约束程序还面临不少新的挑战。如我们面对的约束满足问题呈现出开放交互、大规模、结构化不显著等多种特征</a><span class="s20">[115]</span> <span class="p">，半结构甚至无明确显式结构的约束满足问题建模问题，怎样</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">利用大数据和机器学习方法改善现有的建模和求解方法？……约束程序从建模到求解全过程的自动化和可用性亟待加强，这也是 <span class="s10">2017</span>年国务院印发的《新一代人工智能发展规划》对人工智能发展提出的<a href="part327.htm#bookmark392" style=" color: black; font-family:仿宋, monospace; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt; vertical-align: -5pt;">新要求</a><span class="s22">[116] </span><span class="s21">。</span></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">当前，由 <span class="s10">Freuder </span>教授创立、目前由 <span class="s10">O&#39;Sullivan </span>教授领导的爱尔兰 <span class="s10">Cork </span>大学 <span class="s10">Insight </span>研究中心是最具影响力的约束程序研究基地，并辐射法国、澳大利亚、美国、英国、和意大利等国研究机构。其中， <span class="s10">O&#39;Sullivan </span>教授领导的研究组在约束建模和约束组合求解等方面研究独树一帜，蒙彼利埃大学 <span class="s10">Bessi</span>è<span class="s10">re </span>教授等在自适应约束传播和自动约束建模方法的研究最为突出。<span class="s37"> </span></p><p class="s20" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">国内研究主要集中在经典和分布式约束求解方法的研究，对于交互式约束建模与求解方法研究涉及不多，代表工作有：北京航空航天大学许可教授等提出了著名的 </span><span class="s10">RB</span><span class="p">、</span><span class="s10">RD </span><a href="part327.htm#bookmark393" class="a">模型</a>[117]<span class="s10"> </span><a href="part327.htm#bookmark394" class="a">。香港中文大学的李浩文教授主要研究基于对称消除的约束求解方法</a>[118]<span class="s10"> </span><a href="part327.htm#bookmark395" class="a">；国防科技大学王怀民教授、东北大学张斌教授以及中国科技大学陈恩红教授等主要研究分布式约束优化问题的求解算法</a>[119]<a href="part327.htm#bookmark395" class="s5"> </a>[120]<a href="part327.htm#bookmark396" class="s5"> </a>[121]<span class="s10"> </span><span class="p">、中科院软件所张健教授、马菲菲博士对于混合约束满足问题求解方法及应用的研究</span></p><p class="s20" style="padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">[122]<a href="part327.htm#bookmark397" class="s5"> </a>[123]<span class="s10"> </span><a href="part327.htm#bookmark398" class="a">。吉林大学研究组组早期在孙吉贵教授领导下，在国内较早开展约束程序研究，在约束求解理论、方法及约束求解系统方面做了很多颇具特色的研究工作</a>[124]<a href="part327.htm#bookmark398" class="s5"> </a>[125]<span class="s10"> </span><span class="p">，研究结果得到 </span><span class="s10">Christian Bessière</span><span class="p">教授、李浩文教授等国际知名研究者的肯定。</span></p><p class="s20" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><a href="part327.htm#bookmark399" class="a">约束建模</a>[126]<span class="s10"> </span><span class="p">是约束求解的基础，模型选择的好坏将直接影响约束求解效率甚至问题是否可解，这一点已经得到约束程序界的共识</span></p><p style="padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="s20">[127]</span><a href="part327.htm#bookmark400" class="s5"> </a><span class="s20">[128]</span><span class="s10"> </span>。对于约束程序建模，<span class="s10">2000 </span>年，<span class="s10">Simonis </span>曾给出了<span class="s37">“30 </span>条金法则<a href="part327.htm#bookmark401" style=" color: black; font-family:宋体; font-style: normal; font-weight: normal; text-decoration: none; font-size: 14pt;">”</a><span class="s20">[129]</span><span class="s10"> </span>，但是多数并不具有普适性，只有<span class="s10">“</span>尽量不用布尔模型<span class="s10">”</span>、 <span class="s10">“</span>尽量少用变量和约束<span class="s10">”</span>等简单规则有一定影响。商用和学术方面取得成功的约束建模语言也层出不穷，如 <span class="s10">OPL</span>、<span class="s10">Essence</span>、<span class="s10">MiniZinc </span>等功</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">能都十分强大，但这些建模语言都有一定的局限性：要求用户对于问题特征和求解算法有一个清晰的了解，即用户应具备相当专业的约束程序知识。</p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">在互联网浪潮下，对于计算机系统的交互能力要求日渐提升，自动化同时也是各种人工智能系统的追求的普遍目标，对于交互建模和自动建模的能力需求迫切。基于此，先后在 </span>2003 <span class="p">年和 </span>2007 <span class="p">年，</span>Bessière<span class="p">和 </span>O&#39;Sullivan  <a href="part327.htm#bookmark402" class="a">等人开创了基于问答的约束模型获取研究工作</a><a href="part327.htm#bookmark402" class="s33">[130</a><span class="s20">]</span><a href="part327.htm#bookmark402" class="s5">   </a><a href="part327.htm#bookmark402" class="s33">[131</a><span class="s20">]</span><span class="p">并开发原型系统 </span>CONACQ<span class="p">。</span>2009 <span class="p">年，</span>Shchekotykhin  <a href="part327.htm#bookmark403" class="a">等人</a><a href="part327.htm#bookmark403" class="s33">[132</a><span class="s20">]</span>   <span class="p">，提出了基于辩论的建模方法，以减少学习实例数。</span>2010 <span class="p">年，</span>Lallouet <a href="part327.htm#bookmark404" class="a">等</a><a href="part327.htm#bookmark404" class="s33">[133</a><span class="s20">]</span><span class="p">提出基于归纳逻辑程序的约束模型自动获取方法。</span>2016  <span class="p">年，</span>Picard- Cantin  <a href="part327.htm#bookmark405" class="a">等</a><a href="part327.htm#bookmark405" class="s33">[134</a><span class="s20">]</span>   <span class="p">针对序列约束建模问题提出了从正例中学习参数的方法。</span>2016 <span class="p">年，</span>Bessière  <span class="p">和 </span>O&#39;Sullivan <a href="part327.htm#bookmark406" class="a">人首次提出了归纳约束程序循环理论模型</a><a href="part327.htm#bookmark406" class="s33">[135</a><span class="s20">]</span>   <span class="p">，为机器学习和约束程序融合研究搭建了桥梁，同时也为约束自动模型获取研究指明了方向，但仅限于理论层面和小规模问题实例上，具体实现细节还不十分清晰。</span></p><p class="s20" style="padding-left: 34pt;text-indent: 0pt;text-align: left;"><a href="part327.htm#bookmark385" class="a">近年来，约束求解方法的发展极为迅速</a>[108]<span class="s10"> </span><span class="p">，算法组合方法</span></p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;"><span class="p">（</span>Algorithms Portfolios<a href="part327.htm#bookmark407" class="a">）和自动配置问题成为研究热点</a><a href="part327.htm#bookmark407" class="s33">[136</a><span class="s20">]</span><a href="part327.htm#bookmark407" class="s5">   </a><a href="part327.htm#bookmark407" class="s33">[137</a><span class="s20">]</span>   <span class="p">。目前新的研究进展有：</span>2010 <span class="p">年，</span>Balafoutis <span class="p">和 </span>Stergiou <a href="part327.htm#bookmark408" class="a">用统计学习方法对当前流行的变量序启发式做了一个比较系统的实验评估</a><a href="part327.htm#bookmark408" class="s33">[138</a><span class="s20">]</span>   <span class="p">。对于值选择启发式，最近的代表性工作有：</span>2005 <span class="p">年，</span>Epstein<span class="p">、</span>Freuder <span class="p">和 </span>Wallace  <a href="part327.htm#bookmark409" class="a">联合研制了个性哈启发式策学习、挖掘系统</a><a href="part327.htm#bookmark409" class="s33">[139</a><span class="s20">]</span>   <span class="p">，</span>2015  <span class="p">年， </span>Chu <a href="part327.htm#bookmark410" class="a">等提出了值选择启发式学习策略</a><a href="part327.htm#bookmark410" class="s33">[140</a><span class="s20">]</span>   <span class="p">。同年，</span>Ortiz-Bayliss <a href="part327.htm#bookmark411" class="a">等首次提出了初步具备自动选择功能的“超级变量启发式”</a><a href="part327.htm#bookmark411" class="s33">[141</a><span class="s20">]</span>   <span class="p">。但目前，在挖掘新的选择启发式策略和各种启发式策略组合应用方面的研究还刚起步，研究空间很大。对于算法级别的组合研究，</span>2012 <span class="p">年，</span>Amadini<a href="part327.htm#bookmark412" class="a">等人对约束求解器级别的组合求解进行了初步的实验评估</a><a href="part327.htm#bookmark412" class="s33">[142</a><span class="s20">]</span>   <span class="p">，取得不错的效果，未来需要结合机器学习方法加强约束求解方法的精确选</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;">择和深度融合。</p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><span class="p">自适应约束传播的有影响力的开创性工作是 </span>2009 <span class="p">年 </span>Stergiou <a href="part327.htm#bookmark413" class="a">等提出的基于探查和简单学习机制实现的自适应</a><span class="s20">[143]</span> <span class="p">。最新进展是</span>2015<span class="p">年，</span>Balafrej <a href="part327.htm#bookmark414" class="a">等人提出的参数化自适应约束传播</a><span class="s20">[144]</span> <span class="p">，我们研究组对此亦有贡献。但对于交互式环境的约束满足问题的自动求解研究还刚刚起步，理论基础还不足。除此之外，约束满足问题的结构特征也是影响算法求解效率的重要因素，法国阿尔多瓦大学的 </span>Christophe Lecoutre <span class="p">教授整理建立的 </span>Benchmark <a href="part327.htm#bookmark386" class="a">测试问题实例库</a><span class="s20">[109]</span><a href="part327.htm#bookmark386" class="s5"> </a><span class="s20">[145]</span> <span class="p">，涵盖各个应用领域的 </span>2000 <span class="p">多个问题实例，是良好的学习和测试数据集。</span><span class="s37"> </span></p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">2017 <span class="p">年，</span>Freuder <span class="p">教授为 </span>ACP <span class="p">会刊 </span>Constraints <span class="p">创刊 </span>20 <span class="p">周年专门撰文“</span>Progress towards the Holy Grail<a href="part327.htm#bookmark390" class="a">”指出</a><span class="s20">[114]</span> <a href="part327.htm#bookmark415" class="a">：自动约束建模、自动问题求解</a><span class="s20">[146]</span> <span class="p">将是约束程序下一步的研究重点。</span></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part48.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part50.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
