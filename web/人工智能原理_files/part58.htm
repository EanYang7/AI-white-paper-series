<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>3.1 大数据算法计算模型</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part57.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part59.htm">下一个 &gt;</a></p><p class="s8" style="padding-left: 7pt;text-indent: 0pt;line-height: 18pt;text-align: left;"><a name="bookmark59">3.1 </a><span class="s9">大数据算法计算模型</span></p><p style="padding-top: 6pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">在计算资源受限的场景，针对不同的计算资源（如时间、空间、</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">通信等），我们可以考虑相应的计算模型。在这些计算模型设计提出的各类算法可以帮助我们更好地理解和优化实际应用中使用的算法效率和性能。以下是几个典型的、具有一定理论基础的模型的简单介绍，这些模型可以用于图、矩阵、分布、几何等各种场景中。</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part59.htm">3.1.1 亚线性时间算法</a><a class="toc0" href="part60.htm">3.1.2 亚线性空间算法</a><a class="toc0" href="part61.htm">3.1.3 动态图算法</a><a class="toc0" href="part62.htm">3.1.4 大规模并行计算</a><a class="toc0" href="part63.htm">3.1.5 数据降维</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part57.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part59.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
