<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-cn" lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>8.2.4 变分量子电路</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part155.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part157.htm">下一个 &gt;</a></p><p class="s14" style="padding-left: 7pt;text-indent: 0pt;line-height: 21pt;text-align: left;"><a name="bookmark165">8.2.4 </a><span class="h4">变分量子电路</span></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">优化问题是指在一定的约束条件下，最大化或最小化一个定义在变量集合上的目标函数的问题。变分量子电路（<span class="s10">Variational Quantum Circuits</span>）是一种用于求解优化问题的量子机器学习框架，旨在通过优化参数化的量子门序列来构建解决目标问题的量子电路。变分量子电路中的量子门序列（通常称为拟设）是预先设置好的，对带参可调节的量子门中的参数进行优化可以使得量子电路在特定的任务或问题上表现出最佳性能。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">变分量子电路在当前嘈杂中型量子设备（<span class="s10">Noisy Intermediate-Scale Quantum</span>，<span class="s10">NISQ</span>）技术时代中具有非常前瞻性。尽管受到噪声和有限的量子比特数量的限制，但某些类别的变分量子电路已经显示出在解决一些复杂问题上的潜力。通过结合经典计算的优势，如优化算法和机器学习方法，以及变分量子电路的灵活性，变分量子电路可以在当前的量子硬件上实现相较于经典计算更高效的计算任务。因此，变分量子电路成为了量子计算领域中的一个重要组成部分，为研究人员提供了一种灵活的工具，可被用于设计和实现量子算法，以解决各种复杂的问题。变分量子电路可用于在经典数据集上完成分类、回归等有</p><p style="padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">监督学习任务<span class="s20">[54-56]</span>。对于无监督学习任务，<span class="s10">Otterbach </span>等人提出了一种基于变分量子电路的聚类方法<span class="s20">[57]</span>，他们将聚类任务形式化为最大割问题，然后使用量子近似优化算法<span class="s20">[58]</span>进行求解。在无监督学习上的应用还有基于变分量子电路来构建生成模型，例如由 <span class="s10">Romero </span>等人提出的量子自编码器<span class="s20">[59]</span>，由 <span class="s10">Pierre-Luc </span>等人提出的量子生成对抗网络<span class="s20">[60]</span>。此外，变分量子电路也被应用于构建量子神经网络<span class="s20">[61-63]</span>以及进行深度学<span class="s21">习</span><span class="s22">[64]</span><span class="s21">。</span></p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">本小节重点介绍基于变分量子电路的基本框架，以及从该框架衍 生出的量子近似优化算法。通过深入了解变分量子电路的基本框架以 及其衍生出的量子近似优化算法，我们可以更好地理解和应用这些算 法在量子机器学习中的潜力，并为解决实际问题提供新的思路和方法。</p><p class="s10" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">8.2.4.1 <span class="s37">基本框架</span></p><p class="s10" style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;"><a href="part156.htm#bookmark166" class="a">对于一个特定的优化问题，我们选择一组参数来描述该问题的一个解，并利用相应的目标函数衡量某组参数所代表的解的质量，我们的目标是找到目标函数的最优解。变分量子电路是一种结合经典计算和量子计算的高效求解优化问题的算法框架，如图</a><a href="part156.htm#bookmark166" class="s5">8-4</a> <span class="p">所示。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 39pt;text-indent: 0pt;text-align: left;"><span><img width="472" height="249" alt="图形用户界面, 应用程序描述已自动生成" title="图形用户界面, 应用程序描述已自动生成" src="Image_056.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s24" style="padding-left: 3pt;text-indent: 0pt;line-height: 22pt;text-align: center;"><a name="bookmark166">图 </a><span class="s25">8-4 </span>变分量子电路基本框架</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">量子计算部分用于计算当前参数下的目标函数值，用来评估算法</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;">迭代的效果。将当前算法得到的参数传入预设好的带参量子门序列中，并对带参量子电路的运行输出态进行测量，可以得到当前参数对应的 目标函数值。量子门序列由事先排布好的固定的量子门和带参可调节 的量子门组成。其中，固定的量子门包含一些常用的量子酉变换，比 如受控 <span class="s10">NOT </span>门、<span class="s10">Hadamard </span>门等；而带参可调节的量子门通常是一些 参数化的酉变换，比如量子旋转门。经典部分则负责根据量子部分的 计算结果调整量子电路中的参数，并将更新后的参数反馈给量子部分。这个过程通常涉及优化一个目标函数，优化目标函数的目的是最小化 输出和期望输出之间的差异。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">在这个框架下，经典计算和量子计算的交互是计算性能的关键之一。这种交互通常体现为一个反复迭代的过程，在每一次迭代中，经典部分负责更新参数，然后将参数传递给量子部分，量子部分则用这些参数计算对应的目标函数值。如此反复迭代调整参数，直到模型收敛于最优解或满足精度需求为止。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">在实践应用中，针对不同问题的特点，可以选择或设计不同的带参量子门序列和优化算法，从而实现更好的算法效果。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">带参量子门序列的选择方法主要分为两大类：固定的选择方法和自适应的选择方法。固定的选择方法是指一类在优化过程开始前就确定量子电路整体门序列且在优化过程中不会更改门序列的方法。硬件高效拟设（<span class="s10">Hardware-E</span><span class="s11">ﬃ</span><span class="s10">cient Ansatz</span>）是一种这样的选择方法<span class="s20">[65]</span>。这一方法的门序列由一层单比特的带参旋转门和一层纠缠门交替重复构成。可用旋转门和纠缠门集合都可以根据量子设备的硬件条件而变化，因此对硬件十分友好，同时也兼备了可构建量子电路的多样性。酉耦合簇拟设（<span class="s10">Unitary Coupled Cluster Ansatz</span>）也是一种固定的选择方法， 它最早在变分量子本征求解器算法（ <span class="s10">Variational Quantum Eigensolver</span>）中提出<span class="s20">[66]</span>。这一方法的带参量子门序列与一个带参簇算子与其共轭转置的差的指数映射后的酉矩阵所对应，带参量子门序列</p><p style="padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: justify;">通过计算酉矩阵在 <span class="s10">Bravyi-Kitaev  </span>变换<span class="s20">[67]</span>下的电路得到。酉耦合簇拟设相较于硬件高效拟设有更多的参数，计算精度因而会更加的高，不过酉耦合簇拟设忽略了底层量子硬件的连通性，实际实现的量子门序列的深度相较于硬件高效拟设会更大，需求的量子纠缠门也更多，因此电路复杂性会更高。对于酉耦合簇拟设的研究十分火热，比如 <span class="s10">Joonho Lee </span>等人提出的 <span class="s11">k</span><span class="s10">-UpCCGSD</span><span class="s20">[68]</span>，引入可调节的精度参数 <span class="s11">k </span>来优化电路的复杂性。其他的固定的选择方法还有应用在量子近似优化算法中的一种交替门序列，由一层与目标问题关联的酉矩阵和一层与问题无关的混淆酉矩阵交替构成<span class="s20">[58]</span>，这种门序列是由量子绝热理论启发得到。自适应的选择方法是指在参数优化过程中同时对量子电路的门序列进行动态构建的方法。这一类方法主要包括应用在变分量子本征求解器算法中的<span class="s10">ADAPT-VQE </span>方法<span class="s20">[69]</span>等。<span class="s10">ADAPT-VQE </span>方法的想法是逐步将对目标函数优化效果最好的带参量子门加入到门序列中，通常采用的做法是选择导致梯度最大的量子门。</p><p style="padding-top: 1pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">参数优化算法则可以选择经典机器学习领域里常用的方法，可以按照是否需要计算梯度来分类。基于梯度的优化算法主要是随机梯度下降法，这类方法需要在给定参数值处对目标函数的梯度（或导数）进行计算。梯度计算可使用经典的有限差分逼近法，这个方法计算两个点处函数值之间的差异，并将该差异作为梯度的近似值。另外，计算梯度还可以使用解析梯度法，这种利用求导规则直接计算梯度，精度相较于有限差分逼近法更高。适用于变分量子电路的解析梯度法有 <span class="s10">Schuld </span>等人提出的参数转移规则<span class="s20">[70]</span>，这个梯度计算方法需要运行两次量子电路。另外，<span class="s10">Farhi  </span>等人还提出了一种只需要运行一次量子电路的解析梯度法，不过需要引入一个辅助量子比特来帮助测量<span class="s20">[61]</span>。不依赖于梯度的优化方法则有遗传算法、集群优化算法等。</p><p class="s10" style="padding-left: 7pt;text-indent: 0pt;text-align: left;">8.2.4.2 <span class="s37">量子近似优化算法</span></p><p style="padding-top: 7pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">量子近似优化算法（<span class="s10">Quantum Approximate Optimization Algorithm</span>）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;">是一种基于变分量子电路的近似求解组合优化问题的算法，由 <span class="s10">Farhi </span>等人于 <span class="s10">2014 </span>年提出<span class="s20">[58]</span>。量子近似优化算法的基本思想是通过量子绝 热理论中的演化操作来逐步逼近目标函数的最优解。量子绝热理论是 一种基于量子力学的优化算法，它通过控制一个量子系统的哈密顿量，将其从一个易于制备的初始哈密顿量演化到一个目标哈密顿量，使系 统在演化过程中保持在能量最低的基态，从而得到最优解。量子近似 优化算法可以被视为量子绝热理论的一种近似形式，它的演化操作是 利用经典参数进行调整的，并非严格的绝热演化。该算法通过选择一 个具有良好性质的初始哈密顿量和一系列参数化的演化操作来逼近 目标函数的最优解，初始哈密顿量通常是易于制备的哈密顿量，而演 化操作则对应于一系列参数化的旋转门。相较于传统的量子绝热演化 方法，量子近似优化算法更加灵活且降低了实现的技术要求，但也可 能引入一定的近似误差。</p><p style="padding-left: 34pt;text-indent: 0pt;text-align: left;">具体而言，量子近似优化算法的流程包括以下几个步骤：</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">（<span class="s10">1</span>）定义两个哈密顿量，其中一个哈密顿量与待求解问题相关，它的基态对应了组合优化问题最优解，另一个哈密顿量是混淆哈密顿量；</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: left;">（<span class="s10">2</span>）构造两类带参可调节的量子门，分别对应这两个不同的哈密顿量；</p><p class="s10" style="padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;"><span class="p">（</span>3<span class="p">）选择一个电路深度 </span>p<a href="part156.htm#bookmark167" class="a">，交替使用上述两类带参可调节的量子门完成带参量子门序列的构造，如图 </a><a href="part156.htm#bookmark167" class="s5">8-5</a> <span class="p">所示；</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 15pt;text-indent: 0pt;text-align: left;"><span><img width="536" height="94" alt="image" src="Image_057.png"/></span></p><p class="s24" style="padding-top: 6pt;padding-left: 2pt;text-indent: 0pt;text-align: center;"><a name="bookmark167">图 </a><span class="s25">8-5 </span>量子近似优化算法的带参量子门序列</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 34pt;text-indent: 0pt;text-align: left;">（<span class="s10">4</span>）选择初始参数和输入量子态；</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">（<span class="s10">5</span>）在输入量子态上运行带参量子电路，对输出量子态进行测量；</p><p style="padding-left: 34pt;text-indent: 0pt;line-height: 18pt;text-align: left;">（<span class="s10">6</span>）根据测量结果对量子电路中的参数进行优化；</p><p style="padding-top: 7pt;padding-left: 7pt;text-indent: 27pt;line-height: 140%;text-align: left;">（<span class="s10">7</span>）重复（<span class="s10">5</span>）、（<span class="s10">6</span>）直到收敛，根据最终参数多次运行量子电路并测量，选择具有最佳目标函数值的解作为近似最优解。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">量子近似优化算法已在多种组合优化问题上展现出超越经典算法的优势。对于最大割问题 <span class="s10">Crooks </span>分析发现量子近似优化算法相较于 <span class="s10">Goemans-Williamson </span>算法所使用的量子电路深度更浅，并且在固定电路深度下的算法性能对问题规模不敏感<span class="s20">[71]</span>。<span class="s10">Ebadi </span>等人使用量子近似优化算法，对于特定图实例上的最大独立集问题，相较于模拟退火方法实现了超线性的量子加速<span class="s20">[72]</span>。对于最小顶点覆盖问题，张毅军等人提出了一种基于量子近似优化算法的实现指数级加速的量子解决方案，该方案能在多项式时间内以高概率找到问题的解<span class="s20">[73]</span>。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">量子近似优化算法对于 <span class="s10">NISQ </span>设备具有强大的兼容性，可以在不同的量子计算架构上实施，已经在解决多个实际问题上取得成功。 <span class="s10">2018 </span>年，强晓刚等人使用光量子方案实现了两个量子比特的量子近似优化算法，并用来解决三个组合优化问题<span class="s20">[74]</span>。<span class="s10">2020 </span>年，<span class="s10">Pagano </span>等人在一种使用离子阱技术构建的量子模拟器上实现了低深度的量子近似优化算法，用于估计长程横向场伊辛模型的基态能量以及优化相应的经典组合优化问题<span class="s20">[75]</span>。在超导量子计算机设备上，<span class="s10">Bengtsson </span>等人于 <span class="s10">2019 </span>年应用量子近似优化算法解决了精确覆盖问题的小规模实例<span class="s20">[76]</span>，<span class="s10">Harrigan </span>等人在 <span class="s10">2021 </span>年在谷歌 <span class="s10">Sycamore </span>超导量子处理器上使用量子近似优化算法近似求解了最大割问题<span class="s20">[77]</span>。</p><p style="padding-left: 7pt;text-indent: 27pt;line-height: 139%;text-align: justify;">由此可见，量子近似优化算法在近期的应用前景广阔，并且已经展示出其在实际问题中的适应性和灵活性。然而，要在更实际的设置中实现量子优势，仍然面临着噪声和硬件限制等挑战。因此，继续改</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 139%;text-align: left;">进量子近似优化算法并解决这些挑战仍然是一个持续而活跃的研究领域。</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part155.htm">&lt; 上一个</a><span> | </span><a href="../%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%8E%9F%E7%90%86.html">内容</a><span> | </span><a href="part157.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
