<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>2.5.1 生成式 AI 工程化面临的主要问题</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part25.htm">&lt; 上一个</a><span> | </span><a href="../AI%2BArt.html">内容</a><span> | </span><a href="part27.htm">下一个 &gt;</a></p><h4 style="padding-top: 6pt;padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark56">2.5.1 </a><span class="s17">生成式 </span>AI <span class="s17">工程化面临的主要问题</span><a name="bookmark120">&zwnj;</a></h4><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">扩散模型的优异性能，以及模型微调技术的发展，激发了人们探索生成式<span class="s9">AI </span>在实际生产生活中应用的热情，也在很短的时间内深深影响了一些行业和职业。自 <span class="s9">2022 </span>年底，以文生文产品<span class="s9">ChatGPT </span>和文生图产品 <span class="s9">Midjourney </span>为代表，一系列移动应用、商用产品和开源项目蓬勃涌现，将生成式 <span class="s9">AI </span>推向了寻常百姓家，打开了生成式 <span class="s9">AI </span>技术服务具体业务场景，实现工程化落地的新篇章。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">工程化是指在某种产品、项目或系统的设计、开发和运作过程中，将一系列最佳实践、标准化和自动化应用于其中，以确保其高效、稳定、可靠和可维护。生成式 <span class="s9">AI </span>工程化的目的是提高效率、降低成本、保证质量，从而推动生成式 <span class="s9">AI </span>技术价值的实现。根据目前生成式 <span class="s9">AI</span>技术发展与应用的现状，在开展生成式<span class="s9">AI </span>工程化实践中，主要需要考虑以下三方面的问题。</p><p class="s9" style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">(1) <span class="p">确保良好的用户体验。工程化以应用为最终目的，需要确保使用者的体验，从而使用户能够高效地完成生成式</span>AI <span class="p">的工作。软件工程的先进理念和技术资源为此打下了基础。众多的前端架构不仅使生成</span>AI <span class="p">应用的用户界面美观易用，交互体验好，而且提高了开发的效率。以服务为中心的设计理念，以及模块化和 </span>API <span class="p">技术的最佳实践，确保了应用系统的构建效率和易维护性。插件式结构与开源软件模式，能充分激发技术社区的活力，推动应用的快速迭代，为用户不断提供和升级丰富的功能。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-top: 3pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">(2) <span class="p">灵活获取算力资源。生成式 </span>AI <span class="p">应用的一个重要特点，就是需要大量的算力资源。资源有限、</span>GPU <span class="p">一卡难求，是很多企业用户面临的问题；本地单机工作的效率不高，常常需要多个任务排队等待，是很多个人用户的现状。此时，利用云计算资源，按需使用，动态分配资源，成为缓解上述算力需求压力的途径之一。</span></p><p class="s9" style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">(3) <span class="p">稳定控制生成效果。目前生成式 </span>AI <span class="p">的生成结果往往带有随机性和不确定性，原因复杂多样，例如：生成式</span>AI <span class="p">的基础模型通常基于概率模型，生成过程中利用随机性；训练数据不足或不足够多样化，使模型无法捕捉到数据的潜在分布，从而导致生成结果不稳定；某些模型对初始文本或提示敏感，输入条件的微小变化可能导致生成结果的巨大差异；等等。这一问题也导致了</span>AI <span class="p">生成类视频应用的成熟度明显落后于</span>AI <span class="p">生成图像，因为前者需要解决帧与帧之间的生成稳定性。要解决这一问题，不仅需要在理论上获得突破，也需要在技术实践中进行探索。</span></p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">除此之外，伴随着工程化实践的开展，有些问题也在逐渐显现，需要引起我们的关注。模型是生成式<span class="s9">AI </span>应用的基础，当前大量生成式<span class="s9">AI </span>模型不断涌现，性能日新月异。一方面，基础模型提供商 <span class="s9">(model provider)</span>、使用基础模型调优提供服务的厂商 <span class="s9">(model tuners)</span>，以及可能涉及的监管机构面临着安全、规范、便捷地发布与管理模型的问题。另一方面，面对如此众多的模型，用户也面临着高效搜索与调用模型的问题。生成式 <span class="s9">AI </span>大大提升了创作效率，同时也生成了海量的媒体资源。因此，需要高效地对这些资源进行存储、管理与价值挖掘。处理得当，它们对用户是宝贵的资产；处理不当，反而会成为用户的包袱，造成信息过载和额外的应用成本。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part25.htm">&lt; 上一个</a><span> | </span><a href="../AI%2BArt.html">内容</a><span> | </span><a href="part27.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
