<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>1.2.2 规则、指令、算法</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part6.htm">&lt; 上一个</a><span> | </span><a href="../AI%2BArt.html">内容</a><span> | </span><a href="part8.htm">下一个 &gt;</a></p><h4 style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark10">1.2.2 </a><span class="s17">规则、指令、算法</span><a name="bookmark30">&zwnj;</a></h4><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">当对系统有了相应的了解之后，再回到人类技术、科学和艺术历史发展的背景下，通过<span class="s9">“</span>规则、指令、算法<span class="s9">”</span>这三个关键词，来串联早期基于规则和指令的艺术形式（如概念艺术）、算法艺术以及尝试建立开放技术的系统（组织）的艺术实践。</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark11">1.2.2.1 </a><span class="s18">音乐演奏</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 74pt;text-indent: 0pt;text-align: left;"><span><img width="389" height="259" alt="image" src="Image_007.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-6 </span>音乐演奏</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">作曲家的乐谱以及指挥家的解读是指导乐手演奏的两个主要外部因素。乐谱所承载的音符构成乐曲的规则，而指挥家下达的则是指令。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 51pt;text-indent: 0pt;text-align: left;"><span><img width="447" height="299" alt="image" src="Image_008.gif"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-7 </span>《<span class="s16">Berlin Mix</span>》<span class="s16">, Christian Marclay, 1993</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 38pt;text-indent: 0pt;text-align: left;">1993 <span class="p">年，艺术家克里斯蒂安</span>·<a href="https://www.artnet.com/artists/christian-marclay/" class="s6" target="_blank">马克莱（</a><a href="https://www.artnet.com/artists/christian-marclay/" class="s5" target="_blank">Christian Marclay</a><span class="p">）在柏林</span></p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">莫阿比特区前电车棚的大厅举办了一场由 <span class="s9">180 </span>多位音乐家同时举办的音乐会，包含弦乐乐团、放克乐队、管风琴演奏家、合唱团、手风琴管弦乐队、嘻哈 <span class="s9">DJ</span>、克莱兹默（<span class="s9">Klezmer</span>，一种犹太音乐）二重奏组、歌剧歌手、桑巴乐队、弦乐四重奏、管乐队、摇滚乐队，民族乐团，各种独奏家。马克莱作为指挥在讲台上用纸板发出信号，指示各色音乐家的成员应该何时开始和停止表演。他们都演奏了自己特有的曲目。马克莱将其建立的音乐流派称为<span class="s9">“</span>在线混音 <span class="s9">Live-Mix”</span>。在作品的演绎中，马克莱作为指挥所下达的指令部分是显而易见的。除此之外，这件作品还引入了对于规则的演绎。它被称为《柏林混音（<span class="s9">Berlin Mix</span>）》，也是后现代主义<span class="s9">“</span>重新混合（<span class="s9">Remix</span>）<span class="s9">”</span>的集中表现<span class="s9">——</span>把既有的信号重新混合产生新的信号，并广泛存在于各类 <span class="s9">DJ </span>的创作中。重构及再解读也存在于图像一代关于挪用的探索中，但在此我们主要研究指令与规则的关系。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 78pt;text-indent: 0pt;text-align: left;"><span><img width="375" height="250" alt="image" src="Image_009.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-8 </span>《叠加》，池田亮司</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">在池田亮司《叠加》的视听表演中，有一幕是台上两位表演者抛掷小球的场景。被抛掷的小球散落在网格图上，被电脑系统读取位置坐标，这些位置坐标则进一步作为输入信号进入池田的生成系统中。在这个环节中，池田作为这件作品的创作者，设计抛掷小球这个规则，并向两位表演者下达执行规定的指令。指令的主要特点是下达指令者与执行者不是同一个人，也就是说他们是两个不同的子系统。如这件作品的名字，叠加这一科学现象本身在作品中发挥着重要作用，最明显的是视觉图像的性质。现场通过闪现数学、方程式和公式、数据、原子结构、数字序列、宇宙的元素为观众构建了量子力学的基本原理的叠加式视觉呈现。现场有一个大型电影院式屏幕，一个较低的长条矩形屏幕和十台电脑显示器排列在舞台前面。池田借用了可视化的系统，但是他并不是为了向观众科普量子力学，而是为了挑战人们的思维。毕竟，现场大多数观众接受过量子理论和高等数学的教育能够完全理解作品的可能性接近于零。池田借用人难以投出相同落点的小球，即对规则重复后得出的多样性和不可能预知性，暗合了量子力学中的基础知识结构。</p><p class="s9" style="padding-top: 1pt;padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark12">1.2.2.2 </a><span class="s18">版画</span></p><p class="s9" style="padding-top: 7pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">2016 <span class="p">年纽约现代艺术博物馆在埃德加</span>·<span class="p">德加的展览中展出了他的</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">一系列版画。通常，我们看到的版画是由原版复制而来，除去不可避免的误差版画的每一版会被认为是相同的，是同一幅作品的不同版。而德加显然不这么认为，图 <span class="s9">1-9 </span>中的 <span class="s9">4 </span>幅版画显然来自同一块<span class="s9">“</span>板<span class="s9">”</span>印制而来，但粗浅浓淡迥然不同<span class="s9">——</span>从展厅中的多媒体资料可以得知，德加的这一行为不是<span class="s9">“</span>错误<span class="s9">”</span>而是有意为之。印制那块<span class="s9">“</span>板<span class="s9">”</span>的过程可以看作德加这件作品中的规则，而他追求不同效果的方式就是不断重复这个规则。这组版画从传统媒介的角度为我们提供了理解重复与多样性之间关系的例子。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 54pt;text-indent: 0pt;text-align: left;"><span><img width="438" height="291" alt="image" src="Image_010.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 130pt;text-indent: -119pt;line-height: 162%;text-align: left;">图 <span class="s16">1-9 2016 </span>年纽约现代艺术博物馆<span class="s16">“</span>埃德加<span class="s16">·</span>德加：一种新奇的美<span class="s16">”</span>（<span class="s16">Edgar Degas</span>： <span class="s16">A Strange New Beauty</span>）展览现场</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark13">1.2.2.3 Grasshopper</a></p><p style="padding-top: 8pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">德里达指出即兴需在一定语境内方能被理解，而这个语境正是由一系列规则所构成的，于是我们得出了变化来自标准化，来自对规则的不断推演。<span class="s9">Grasshopper </span>是一种三维参数化设计软件，这种软件大量地应用在曲面的设计中。借助三维设计软件 <span class="s9">Rhino </span>中的<span class="s9">Grasshopper</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">插件，设计师可以通过输入实地空间参数，驱动电脑运算产生无穷尽的可能结果，并从中选择最优解。在这个例子中，建筑师具备设计建筑的初衷（为什么要设计）和对最终结果的决定权（具体要设计什么），但把部分的<span class="s9">“</span>如何<span class="s9">”</span>也就是过程的一部分交由数字程序负责构建一个庞大的<span class="s9">“</span>结果池<span class="s9">”</span>供设计师选择。通常我们会因为数据库（结果池）的客观存在，而忽视数据库的建立是主观行为的结果。如果我们把数字程序和电脑想象成小精灵，设计师指挥着一群小精灵画出数以千计的图纸，那么小精灵是图纸的创造者吗？</p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;">在此，我们可以将小精灵创造图纸理解为一个图纸生成系统。</p><p class="s9" style="padding-top: 7pt;padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark14">1.2.2.4 </a><span class="s18">色彩规律为例</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 103pt;text-indent: 0pt;text-align: left;"><span><img width="307" height="308" alt="image" src="Image_011.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-10 </span>约瑟夫·阿尔伯斯的丝网版画</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">上图是约瑟夫<span class="s9">·</span>阿尔伯斯 <span class="s9">(Josef Albers) </span>的丝网版画，该作品是在这位艺术家从德国移民到美国很久之后制作的， 他曾在包豪斯 <span class="s9">(Bauhaus) </span>担任讲师，这所艺术学校于 <span class="s9">1933 </span>年被纳粹关闭。从 <span class="s9">1990</span>年代开始，他对于设计的创新激发着艺术和学术界对数字包豪斯的呼声<span class="s9">——</span>统一艺术、设计和技术。阿尔伯斯对色彩理论特别感兴趣，并</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">研究了将不同颜色彼此相邻放置所引起的色调感知变化。像<span class="s9">“</span>向正方形致敬<span class="s9">”</span>和<span class="s9">“</span>变体<span class="s9">”</span>系列的作品中，他制定了嵌套彩色正方形和矩形的规则，以强调我们对单一颜色的感知<span class="s9">——</span>它的色调、饱和度和透明度</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">——<span class="p">如何根据其接近度而变化以及与相邻颜色的交互。除了简单的色彩混合理论外，人类认知色彩的规则也大量地被认知科学、神经科学界所研究。</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 162pt;text-indent: 0pt;text-align: left;"><span><img width="150" height="150" alt="image" src="Image_012.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-11 </span>加色混合（例如在计算机中）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 162pt;text-indent: 0pt;text-align: left;"><span><img width="144" height="144" alt="image" src="Image_013.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-left: 7pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-12 </span>减色混合（例如在打印机中）</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">John F. Simon Jr. <span class="p">的 </span>Color Panel v1.0 (1999) <span class="p">是阿尔伯斯画作的数字变体，是一款基于包豪斯色彩实验的软件艺术作品，显示在由艺术家修改的笔记本电脑上。西蒙编写的软件将屏幕分成五个矩形，对透明度、颜色编码和混合的变化进行编码。其中一个矩形是阿尔伯斯向他的学生提出的</span>“<span class="p">透明度问题</span>”<span class="p">的程序版本，要求他们混合中间颜色，使一个形状看起来覆盖另一个形状。在 </span>Color Panel v1.0 <span class="p">中，它是混合颜色以模拟透明度的算法。从西蒙的尝试中，我们可以感到他</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">将阿尔伯斯画作中色彩规则的探索进一步打包成了一种软件，而软件则是一些算法的集合。结合前面章节对于算法和叙事的比较中对于游戏规则的讨论，可以得出算法也是一组规则的集合，即规则在数学、数字空间中的表达。西蒙的这件作品实际上是艺术实践中较早建立开放性技术系统的尝试。</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark15">1.2.2.5 </a><span class="s18">指令成为规则</span></p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">基于指令和规则的实践，是数字艺术的发展历史的重要脉络之一，在诸如达达（<span class="s9">1916 </span>年至 <span class="s9">1920 </span>年达到顶峰）、激浪派（<span class="s9">1962 </span>年命名并松散组织）和观念艺术（<span class="s9">1960-70 </span>年代）等艺术运动中占有重要地位，每一个都关注概念、事件和观众参与，以及正式教学的变化。规则是创造艺术的过程的想法也与构成所有软件和每个计算机操作的基础的算法有明确的联系：一种在有限数量的步骤中完成结果的正式指令过程。就像达达诗歌或激浪派表演的组合和基于规则的过程一样，任何形式的计算机艺术的基础都使用指令作为概念元素。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: right;">艺术史中有大量作品构建了编程和概念艺术家之间的联系，这些艺术家将想法的概念视为自己艺术实践背后的驱动力。杰出的概念艺术家索尔<span class="s9">·</span>勒维特（<span class="s9">Sol LeWitt</span>）在绘画、照片、版画和他称之为<span class="s9">“</span>结构<span class="s9">”</span>的雕塑等媒介中创作了大量基于想法和指导的作品。他的壁画由以自然语言编写的指令组成，这些指令在特定的展览现场作为图纸执行。将作品的执行留给艺术家以外的人是勒维特概念艺术概念的核</p><p style="padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">心。在概念艺术中，想法或概念是作品最重要的方面。当一个艺术家使用一种概念性的艺术形式时，这意味着所有的计划和决策都是事先制定的，执行时却是像作品运输那样成为另外的一件事情。这个概念、想法变成了一套制造艺术的系统。这个系统可以向外下达指令，不断地生产出作品。在勒维特过世之后，我们依然可以看到新的壁画出现在各大美术馆。这些新的壁画就像是布展时安装一件作品，布展方按照勒维特留下的说明书（自然语言指令）将壁画重现在墙壁上。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">卡西<span class="s9">·</span>瑞斯 <span class="s9">(Casey Reas) </span>创造了一款类似于勒维特壁画的软件。瑞斯的软件会执行诸如<span class="s9">“</span>创建一个充满一百个中小圆圈的表面<span class="s9">”</span>，<span class="s9">“</span>每个圆圈都有不同的大小和方向<span class="s9">”</span>，<span class="s9">“</span>以相同的缓慢速度移动<span class="s9">”</span>这样的指令。瑞斯进一步让软件显示圆圈的各种交点。瑞斯这件《｛软件｝结构》（｛<span class="s9">Software</span>｝ <span class="s9">Structures</span>）明确引用勒维特的作品，并探索了观念艺术与软件艺术理念的相关性。艺术家的创作过程从描述视觉元素之间动态关系的文字出发，然后将它们转化为来软件实现。这是一个将指令、规则变成算法的过程。瑞斯还与本<span class="s9">·</span>弗莱（<span class="s9">Ben Fry</span>）一起创建了编程语言《<span class="s9">Processing</span>》。这是一个使用 <span class="s9">Java </span>语言的开源开发环境，致力于在可视化环境中向非程序员传授计算机编程的基础知识。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 73pt;text-indent: 0pt;text-align: left;"><span><img width="388" height="282" alt="image" src="Image_014.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 47pt;text-indent: 0pt;text-align: left;">图 <span class="s16">1-13 </span>卡西<span class="s16">·</span>瑞斯<span class="s16">.</span>｛软件｝结构<span class="s16">.</span>创作于 <span class="s16">2004 </span>年，更新于 <span class="s16">2016 </span>年</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">1960 <span class="p">年代，像观念艺术那样基于指令的实践几乎是与艺术家开始使用计算机创作早期算法艺术同时发生。早期算法艺术的先驱者编写代码并存储在打孔卡片上，然后通过计算机运行这些打孔卡片，以驱动笔式绘图仪，从而在纸上创建</span>“<span class="p">数字绘图</span>”<span class="p">。</span></p><p style="padding-left: 38pt;text-indent: 0pt;text-align: justify;">查克<span class="s9">·</span>库里（<span class="s9">Chuck Csuri</span>）在俄亥俄州立大学与程序员詹姆斯<span class="s9">·</span>谢</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">弗（<span class="s9">James Shaffer</span>）合作使用 <span class="s9">IBM 7094</span>（被认为是 <span class="s9">1960 </span>年代早期最强大的计算机之一）创建了《正弦曲线人（<span class="s9">Sine Curve Man</span>）》（<span class="s9">1967</span>年）。这是在美国完成的第一幅具象计算机绘图。<span class="s9">IBM 7094  </span>被 <span class="s9">NASA</span>用于双子星和阿波罗太空计划，也被用于早期的导弹防御系统。 <span class="s9">IBM 7094 </span>的由 <span class="s9">4×7  </span>英寸的<span class="s9">“</span>打孔卡<span class="s9">”</span>组驱动。打孔卡其中存储信息被用来驱动鼓式绘图仪，例如绘制一条线需要包含的信息有何时拿起、移动和放下笔，以及何时结束。我们可以发现这种驱动形式是序列式的，同样的驱动方式也出现在 <span class="s9">DMX </span>驱动的机械臂等等。这样驱动方式的特点是非响应式的，也就是说系统其实并不知道自己在画什么，只是忠实地复制和执行指令。机器也不知自己执行的效果，甚至不知道绘图仪上的笔是否还有油墨。如果中途出现了差错，系统会视而不见地继续执行。这些早期的实践者被称为算法学家，其还包括艺术家 <span class="s9">Harold Cohen</span>、<span class="s9">Herbert Franke</span>、<span class="s9">Manfred Mohr</span>、<span class="s9">Vera Molnar</span>、<span class="s9">Frieder Nake </span>和<span class="s9">Roman Verostko</span>、<span class="s9">Frederick Hammersley </span>和 <span class="s9">Joan Truckenbrod</span>。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 105pt;text-indent: 0pt;text-align: left;"><span><img width="315" height="271" alt="image" src="Image_015.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-14 </span>查克<span class="s16">·</span>库里、詹姆斯<span class="s16">·</span>谢弗<span class="s16">.</span>正弦曲线人<span class="s16">.1967</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 140%;text-align: left;">从上述的例子我们已经可以粗略地理清一组指令可以构成规则，而一组规则可以构成系统，当这些规则被转译成数字世界里的语言时</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;text-align: left;">就成为算法。</p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">接下来我们来研究其他基于指令的实践。比如激浪派艺术家、音乐家和表演者团体所举办的<span class="s9">“</span>事件<span class="s9">”</span>（<span class="s9">happenings</span>），这些<span class="s9">“</span>事件<span class="s9">”</span>通常也基于精确指令的执行。激浪派将观众的参与和<span class="s9">“</span>事件<span class="s9">”</span>融合在一起，可以看作是当今许多计算机艺术作品的交互和基于社会事件的先驱。与随机性相关的现成元素（<span class="s9">found element</span>）和指令的概念也构成了美国先锋作曲家约翰<span class="s9">·</span>凯奇的音乐作品的基础，他在 <span class="s9">1950 </span>年代和 <span class="s9">60 </span>年代的在互动方面进行大量实验性作品与数字艺术的历史最为相关。凯奇将音乐中的结构描述为可分割成连续的部分，并且经常在他的作品中往预先定义的结构中填充找到的、现成的声音。</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark16">1.2.2.6 </a><span class="s18">无为</span></p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 140%;text-align: justify;">先锋艺术大量受到了道家无为思想的影响。无为指向的是道家对世界运行规律的理解，强调顺势而为。凯奇于 <span class="s9">1952 </span>年首演的作品</p><p style="padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">《<span class="s9">433</span>》可说独树一帜、最具代表性。这部作品首演为钢琴演出，它包含三个乐章：钢琴师打开琴盖后，不演奏直到时间到，盖上琴盖。重复三次，过程恰好 <span class="s9">4 </span>分 <span class="s9">33 </span>秒，演出结束。对于他而言，或是每一位听众，其实没有所谓绝对的无声。又如他以《易经》（<span class="s9">Book of changes</span>）为名的作品《<span class="s9">Music of Changes</span>》，将声音与乐谱的关系交予随机的卜卦。与其将凯奇的这些作品归于音乐的范畴，还不如归为观念艺术。借无为的思维，这对后结构主义式罗兰<span class="s9">·</span>巴特<span class="s9">“</span>作者已死<span class="s9">”</span>与福柯<span class="s9">“</span>人的消逝<span class="s9">”</span>宣言的重新思考，重新把作者的重要性通过无为非不为带了回来。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 128pt;text-indent: 0pt;text-align: left;"><span><img width="243" height="314" alt="image" src="Image_016.jpg"/></span></p><p class="s15" style="padding-top: 6pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-15 </span>约翰<span class="s16">·</span>凯奇<span class="s16">.4 </span>分 <span class="s16">33 </span>秒原稿<span class="s16">.1952</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 8pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">除了前面提到的作品，还有以教学为基础的尝试。《舞蹈（<span class="s9">Dance</span>）》 <span class="s9">(1979)  </span>作品由舞者兼编舞露辛达<span class="s9">·</span>柴尔兹（<span class="s9">Lucinda Childs</span>）和索尔<span class="s9">·</span>勒维特（<span class="s9">Sol LeWitt</span>）合作，由菲利普<span class="s9">·</span>格拉斯（<span class="s9">Philip Glass</span>）配乐。在图中我们可以看到，投影在舞蹈下方的画廊地板上的是柴尔兹的表示舞者动作的图表。这些舞者的动作与凯奇的音乐相似，都使用了重复的结构。这应和了前文提到的对于规则不间断的重复，将引出变化。但是，在这里重复有着很强的教学属性。这一点与中国画传统中的临摹非常相近。</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark17">1.2.2.7 </a><span class="s18">临摹</span></p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">临摹是指按照原作仿制书法和绘画作品的过程。临，是照着原作写或画；摹，是用薄纸（绢）蒙在原作上面写或画。广义的临摹，所仿制的不一定是字画，也可能是碑、帖等。这是学习书画的一个重要过程，为谢赫六法之一。在临摹过程中所积累的细微变化，最终会引起质变，进而表现在创作上。</p><p class="s9" style="padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark18">1.2.2.8 </a><span class="s18">指令与形式</span></p><p style="padding-top: 7pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">在前文中，我们梳理了观念艺术中指令的概念，并与规则、算法</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">建立了联系。在其他一些作品中，我们会发现指令与形式进一步融为一体。劳伦斯<span class="s9">·</span>韦纳（<span class="s9">Lawrence Weiner</span>）和约瑟夫<span class="s9">·</span>科苏斯（<span class="s9">Joseph Kosuth</span>）的文字类作品都揭示了这一点。韦纳的《<span class="s9">HERE THERE &amp; EVERYWHERE</span>》 （<span class="s9">1989</span>）由四个文本片段组成，通过直白的文本让观众展开关于地点的想象。科苏斯的《绿色霓虹灯中的五个字》</p><p style="padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">（<span class="s9">1965 </span>年）则直接用绿色霓虹灯拼出作品的标题，使用语言作为材料和媒介。在 <span class="s9">2000 </span>年左右流行的数字艺术中，很多艺术家选择直接将构成作品的代码直接展览。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 92pt;text-indent: 0pt;text-align: left;"><span><img width="344" height="265" alt="image" src="Image_017.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-16 </span>约瑟夫<span class="s16">·</span>科苏斯<span class="s16">.</span>绿色霓虹灯中的五个字<span class="s16">.1965</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 8pt;padding-left: 38pt;text-indent: 0pt;text-align: left;">正如科苏斯的作品一样， 观众在看比如布拉德福德<span class="s9">· </span>佩利</p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">（<span class="s9">Bradford W. Paley</span>）的《代码配置文件（<span class="s9">Code Profiles</span>）》 （<span class="s9">2002</span>）直白的展示作品的代码一样，观众直接看到的正是创作作品的语言。佩利还展示了阅读器、编写器和计算机在作品构建中的作用：琥珀色线表示观众如何逐行阅读代码，白线表示 佩利是如何编写代码的，绿线表示计算机如何执行代码。借由不同的实体用不同的方式阅读或是理解代码，我们感觉到其讨论的是背后不同的规则。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 55pt;text-indent: 0pt;text-align: left;"><span><img width="431" height="269" alt="image" src="Image_018.jpg"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s15" style="padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: center;">图 <span class="s16">1-17 </span>布拉德福德<span class="s16">·</span>佩利<span class="s16">.</span>代码配置文件<span class="s16">.2022</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s9" style="padding-top: 8pt;padding-left: 10pt;text-indent: 0pt;text-align: left;"><a name="bookmark19">1.2.2.9 </a><span class="s18">算法</span></p><p style="padding-top: 7pt;padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">曼诺维奇在 <span class="s9">1999 </span>年《作为先锋的软件（<span class="s9">Avant-Garde as Software</span>）》中归纳了所有数字媒体的新科技，根据其所支持的功能排成四组：获取（<span class="s9">access</span>）， 生成（<span class="s9">generation</span>）， 操控（<span class="s9">manipulation</span>）， 还有分析（<span class="s9">analysis</span>）。随着 <span class="s9">1999 </span>年以来软件的进化，出现了各类功能的</p><p style="padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">逐渐一体化，他在 <span class="s9">2013 </span>年的《由软件统帅指挥》中进一步指出：<span class="s9">“</span>实际上当用户获取进入（<span class="s9">access</span>）某软件时，它自动地提供了一些修改功能（<span class="s9">manipulation</span>）<span class="s9">”——</span>而这种对用户的操控有时候被我们所忽视。一些看似对<span class="s9">“</span>传统媒介<span class="s9">”</span>的数字化模仿夹带着一些独有的数字逻辑。比如，一个我们每天都在自己的智能手机上使用的技术<span class="s9">——</span>触摸屏幕，是对我们在真实空间中<span class="s9">“</span>拖拽”“拿放”“开关<span class="s9">”</span>等动作的数字化模仿。我们对此习以为常，认为这不过是<span class="s9">“</span>媒介的另一种数字化<span class="s9">”</span>而已，其实不然，例如，<span class="s9">“</span>双指并拢然后分开<span class="s9">”</span>这一每天都在使用的<span class="s9">“</span>放大<span class="s9">”</span>技能，请找一本<span class="s9">“</span>古老<span class="s9">”</span>的家庭相册试一试，看看能不能如法炮制把 <span class="s9">4 </span>寸小照片中的某一个令人怀念的细节放大？我们在使用软件的同时，软件也在改变我们的思维<span class="s9">——</span>教会我们一些数字逻辑。</p><p style="padding-left: 38pt;text-indent: 0pt;text-align: left;">在<span class="s9">Adobe Photoshop </span>中有一组神奇的功能叫做<span class="s9">“Content Aware</span>（图</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: left;">像识别）<span class="s9">”</span>。顾名思义，<span class="s9">Photoshop </span>依据给定的图像，列入一双鞋子的照片，通过分析（<span class="s9">Analysis</span>），推演生成（<span class="s9">Generation</span>）出不同的结果，达到对原始照片进行操控（<span class="s9">Manipulation</span>）的目的。例如，图像识别填充就是依据周边像素信息，推算出给定区域的像素值。图像艺术家卢卡斯<span class="s9">·</span>布莱洛克（<span class="s9">Lucas Blalock</span>）有一系列作品利用图像识别功能，通过图像识别笔刷在画面上涂抹，产生一组组形似但其实不同的照片。在这些图像产生的过程中，<span class="s9">Photoshop </span>依据自己的内在算法逻辑推演出结果，最终被平实地展现在艺术家的作品中。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">编织与算法之间的关系非常密切。<span class="s9">Joseph Marie Jacquard </span>于 <span class="s9">1804</span>发明了一种提花编织机，可以将所需编织的方法（路径）储存在打孔卡上，通过打孔卡实现自动化编织。实际上之后的早期计算机采用打孔卡正是受到此的影响，只不过打孔卡所承载的不仅仅是编织的方法，可以是更广阔的指令、规则、算法。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">更年轻一代的艺术家的作品则直接揭示了算法的潜力。其中一种思路正是前文重点介绍过的生成艺术，借由一个系统进行艺术创作的过程。这个系统可以是一组人类的语言，可以是有机的生物过程，也自然可以是数学的、计算机、机械的过程。这之中所强调的是一定程度的自主性，勒维特的壁画作品显然具有规则和指令的特点，但是缺乏了一定的自主性。我们无法仅仅依靠勒维特的说明来产生作品，我们需要有人根据他的说明去执行。同时，瑞斯的《软件结构》则表现出了极强的自主性，程序可以自主地决定并且执行生成动作。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: justify;">算法还能驱动交互类的作品。在这种作品中，强调的是作品与观众之间的互动。这种作品往往与游戏有一定相似之处，都涉及观众参与的驱动力，交互的目的，交互中的付出及收获的回报<span class="s9">——</span>强调的是算法构成的系统的反馈性质。</p><p style="padding-left: 10pt;text-indent: 27pt;line-height: 139%;text-align: left;">算法所直接构成的系统还能直接作为对象参与到艺术创作中。早期的例子是以建立开放技术的系统为目标的艺术实践。随着人工智能</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 139%;text-align: justify;">的发展，艺术家开始探索算法所代表的规则本身的含义。一些艺术家开始在生成任务和交互任务的基础上，从更宏观的角度研究算法所组成系统。例如，艺术家开始让人工智能（算法）在给定的范围内执行预设任务，例如走迷宫或者捉迷藏，目的是看该算法执行的效果。更进一步的实践是用复杂的算法构建一种生态系统即不同的算法生物之间的互动及自我进化的过程。</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part6.htm">&lt; 上一个</a><span> | </span><a href="../AI%2BArt.html">内容</a><span> | </span><a href="part8.htm">下一个 &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
